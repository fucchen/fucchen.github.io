<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>bgp flapping every 3 mins</title>
    <url>/2020/05/09/bgp-flapping-every-3-mins/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="/images/bgp-1-1.png" alt=""></p>
<p>1/ N9K-1与N9K-2直连，物理口L2，两端用loopback0(11.11/32与22.22/32)建IBGP邻居，两端loopback互相访问的出口是SVI10与e1/1</p>
<p>2/ 两端SVI10 MTU 9216, 两端e1/1 MTU 1500</p>
<p>3/ bgp每隔3分钟flap一次，log显示down的原因是holdtimer expire</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">31</span>:<span class="number">02</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Down - sent:  holdtimer expired error</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">31</span>:<span class="number">13</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Up </span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">34</span>:<span class="number">13</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Down - sent:  holdtimer expired error</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">34</span>:<span class="number">24</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Up </span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">37</span>:<span class="number">24</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Down - sent:  holdtimer expired error</span><br></pre></td></tr></table></figure>

<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>在N9K-1上ethanalyzer抓包如下</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">93180</span><span class="number">-1</span>(config-<span class="keyword">if</span>)<span class="comment"># ethanalyzer local interface inband display-filter "ip.addr==11.11.11.11" limit-captured-frames 0</span></span><br><span class="line"></span><br><span class="line">Capturing on inband</span><br><span class="line">2020-04-21 14:37:46.113886  22.22.22.22 -&gt; 11.11.11.11  BGP NOTIFICATION Message</span><br><span class="line">2020-04-21 14:37:46.113932  11.11.11.11 -&gt; 22.22.22.22  TCP 27237 &gt; bgp [ACK] Seq=2646 Ack=22 Win=4588 Len=0 TSV=6362322 TSER=6515652</span><br><span class="line">2020-04-21 14:37:51.120379  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 27237 [FIN, ACK] Seq=22 Ack=1 Win=4582 Len=0 TSV=6517154 TSER=6308321</span><br><span class="line">2020-04-21 14:37:51.121086  11.11.11.11 -&gt; 22.22.22.22  BGP KEEPALIVE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:51.121201  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 27237 [RST] Seq=23 Win=0 Len=0</span><br><span class="line">2020-04-21 14:37:57.001783  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [SYN] Seq=0 Win=18352 Len=0 MSS=9176 TSV=6365589 TSER=0 WS=2</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  TCP三次握手协商出MSS <span class="number">9176</span></span><br><span class="line"></span><br><span class="line">2020-04-21 14:37:57.001910  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [SYN, ACK] Seq=0 Ack=1 Win=18328 Len=0 MSS=9176 TSV=6518918 TSER=6365589 WS=2</span><br><span class="line">2020-04-21 14:37:57.001968  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=1 Ack=1 Win=18352 Len=0 TSV=6365589 TSER=6518918</span><br><span class="line">2020-04-21 14:37:57.002650  22.22.22.22 -&gt; 11.11.11.11  BGP OPEN Message</span><br><span class="line">2020-04-21 14:37:57.002687  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=1 Ack=71 Win=18352 Len=0 TSV=6365589 TSER=6518918</span><br><span class="line">2020-04-21 14:37:57.137256  11.11.11.11 -&gt; 22.22.22.22  BGP OPEN Message</span><br><span class="line">2020-04-21 14:37:57.137362  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [ACK] Seq=71 Ack=71 Win=18328 Len=0 TSV=6518959 TSER=6365629</span><br><span class="line">2020-04-21 14:37:57.138112  11.11.11.11 -&gt; 22.22.22.22  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:57.138180  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [ACK] Seq=71 Ack=90 Win=18328 Len=0 TSV=6518959 TSER=6365630</span><br><span class="line">2020-04-21 14:37:57.150782  22.22.22.22 -&gt; 11.11.11.11  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:57.150812  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=90 Ack=90 Win=18352 Len=0 TSV=6365634 TSER=6518963</span><br><span class="line">2020-04-21 14:37:58.152430  11.11.11.11 -&gt; 22.22.22.22  BGP UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  向外发大于<span class="number">1500</span>B的update                               </span><br><span class="line"></span><br><span class="line">2020-04-21 14:37:58.157457  22.22.22.22 -&gt; 11.11.11.11  BGP UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:58.157505  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=198 Win=18352 Len=0 TSV=6365936 TSER=6519265</span><br><span class="line">2020-04-21 14:37:58.354040  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message   </span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  大于<span class="number">1500</span>B的update大于对端物理口MTU，被视为jumbo直接丢弃，对面不回ACK，本端收不到ACK，不断重传</span><br><span class="line"></span><br><span class="line">2020-04-21 14:37:58.760702  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:59.574032  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:01.204036  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:04.464031  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:10.984024  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:24.024033  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:50.104020  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:58.163131  22.22.22.22 -&gt; 11.11.11.11  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:58.163193  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=217 Win=18352 Len=0 TSV=6383937 TSER=6537267</span><br><span class="line">2020-04-21 14:39:42.317356  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:39:58.169396  22.22.22.22 -&gt; 11.11.11.11  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:39:58.169458  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=236 Win=18352 Len=0 TSV=6401939 TSER=6555269</span><br><span class="line">2020-04-21 14:40:57.155907  22.22.22.22 -&gt; 11.11.11.11  BGP NOTIFICATION Message                                                                                                                                                                                  </span><br><span class="line">2020-04-21 14:40:57.155955  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=257 Win=18352 Len=0 TSV=6419635 TSER=6572965</span><br><span class="line">2020-04-21 14:41:02.161130  11.11.11.11 -&gt; 22.22.22.22  BGP KEEPALIVE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:41:02.161252  22.22.22.22 -&gt; 11.11.11.11  TCP [TCP Dup ACK 5137#1] bgp &gt; 31606 [ACK] Seq=257 Ack=90 Win=18328 Len=0 TSV=6574466 TSER=6365634 SLE=2735 SRE=2774</span><br><span class="line">2020-04-21 14:41:02.162420  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [FIN, ACK] Seq=257 Ack=90 Win=18328 Len=0 TSV=6574467 TSER=6365634 SLE=2735 SRE=2774</span><br><span class="line">2020-04-21 14:41:02.162451  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2774 Ack=258 Win=18352 Len=0 TSV=6421137 TSER=6574467</span><br></pre></td></tr></table></figure>

<p>要点</p>
<p>1/ 在BGP邻居建立前的进行TCP三次握手中，可以看到MSS协商成了9176</p>
<p>2/ BGP建邻居用的Open报文都是小包(size &lt; 1500)正常收发，bgp邻居正常建立</p>
<p>3/ bgp邻居建立后，下一步是通告bgp update，bgp Update报文size上限由TCP MSS决定，所以此处BGP Update size最大可以达到9176，<br>bgp通告路由时会将多个NLRI路由信息裹在一个Update报文里，所以当邻居up后，需要通告的路由较多时，很容易出现Update size &gt; 1500 的情况出现，bgp Update size &gt; 物理口e1/1的MTU 1500，所以N9K-1将该包记output error &amp; jumbo将包从e1/1发出，N9K-2收到包记input error &amp; jumbo，并在接口层面丢弃该报文，所以上层tcp &amp; bgp实际上并没有收到这个tcp based update，自然也不会回复ack，所以我们看到N9K-1由于收不到ack，不断重传</p>
<p>4/ 仔细观察Update报文部分，会发现keepalive报文也是裹在jumbo frame的bgp update作为同一个传输的，所以keepalive也是被N9K-2直接丢弃的并且没有ack，所以N9K-1在连续三次发出的Keepalive(60s * 3 == 180s/3mins)没有被ack后，触发holdtime expire，邻居被重置，然后一直循环这4个步骤</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>1/沿途涉及的L2/L3接口MTU统一成9216</p>
<p>2/两端配置pmtud，启用后pmtud协商出较小的MSS值，如下输出协商成了1024，所以后续bgp update不会大于这个size</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">93180</span><span class="number">-1</span>(config-<span class="keyword">if</span>)<span class="comment">#  show sockets connection local 11.11.11.11 foreign 22.22.22.22 detail </span></span><br><span class="line"></span><br><span class="line">Total number of netstack tcp sockets: <span class="number">5</span></span><br><span class="line">Active connections (including servers)</span><br><span class="line"></span><br><span class="line">Total number of netstack udp sockets: <span class="number">9</span></span><br><span class="line">Active connections (including servers)</span><br><span class="line"></span><br><span class="line">Total number of netstack raw sockets: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">Kernel Socket Connection:</span><br><span class="line">State      Recv-Q Send-Q        Local Address:Port          Peer Address:Port </span><br><span class="line"></span><br><span class="line">ESTAB      <span class="number">0</span>      <span class="number">0</span>               <span class="number">11.11</span><span class="number">.11</span><span class="number">.11</span>:<span class="number">179</span>            <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span>:<span class="number">54435</span>  ino:<span class="number">133796</span> sk:ffff8805d0e31a00</span><br><span class="line"></span><br><span class="line">         skmem:(r0,rb262144,t0,tb262144,f0,w0,o0) ts sack cubic wscale:<span class="number">2</span>,<span class="number">2</span> rto:<span class="number">203.333</span> rtt:<span class="number">3.333</span>/<span class="number">1.666</span> ato:<span class="number">40</span> mss:<span class="number">1024</span> cwnd:<span class="number">5</span> ssthresh:<span class="number">7</span> send <span class="number">12.3</span>Mbps rcv_space:<span class="number">18328</span></span><br></pre></td></tr></table></figure>

<h3 id="附LAB复现方法"><a href="#附LAB复现方法" class="headerlink" title="附LAB复现方法"></a>附LAB复现方法</h3><p>LAB找两台N9K用如上拓扑连接，然后在N9K-1上通过脚本创建大量loopback，并将其network到bgp中，通告给N9K-2。复现这个故障最关键地方是需要保证bgp up后，向peer通告的路由数量要足够多，Update size需要大于1500</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> cli <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">509</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> i &lt;= <span class="number">254</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">print</span> <span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.1.'</span> + str(i) + <span class="string">'/32'</span></span><br><span class="line"><span class="meta">... </span>        cli(<span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.1.'</span> + str(i) + <span class="string">'/32'</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">print</span> <span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.2.'</span> + str(i<span class="number">-254</span>) + <span class="string">'/32'</span></span><br><span class="line"><span class="meta">... </span>        cli(<span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.2.'</span> + str(i<span class="number">-254</span>) + <span class="string">'/32'</span>)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">conf t ; interface loopback0 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback1 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback2 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.2</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback3 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.3</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback4 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.4</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback5 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.5</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback6 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.6</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback7 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.7</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback8 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.8</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback9 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.9</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quit()</span><br><span class="line"> Redistribute the <span class="number">500</span> loopbacks into BGP to create a large size BGP UPDATE</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">ip prefix-list LOCAL-TO-BGP seq <span class="number">5</span> permit <span class="number">1.1</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> ge <span class="number">25</span> </span><br><span class="line">ip prefix-list LOCAL-TO-BGP seq <span class="number">10</span> permit <span class="number">1.1</span><span class="number">.2</span><span class="number">.0</span>/<span class="number">24</span> ge <span class="number">25</span></span><br><span class="line">!</span><br><span class="line">route-map LOCAL-TO-BGP permit <span class="number">10</span></span><br><span class="line">  match ip address prefix-list LOCAL-TO-BGP </span><br><span class="line">!</span><br><span class="line">router bgp <span class="number">64512</span></span><br><span class="line">  timers bgp <span class="number">3</span> <span class="number">9</span></span><br><span class="line">  address-family ipv4 unicast</span><br><span class="line">    redistribute direct route-map LOCAL-TO-BGP</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>bgp</tag>
      </tags>
  </entry>
  <entry>
    <title>all bgp neighbor down</title>
    <url>/2020/05/11/all-bgp-neighbor-down/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>实际拓扑不好画，大概描述下，9516，和几百个TOR建了bgp邻居</p>
<p>故障是bgp邻居全down，嗯还是两台9516都挂球子了，自行脑补这事儿炸毛的场景（万幸是客户冗余做得好，没什么实际业务影响）</p>
<p>当时邻居全down后，客户把整机断电后开始要查，断电后通常syslog/bgp进程什么的log都刷没了，信息都不知道采什么，真酸爽。</p>
<p>唯一能追溯到有用的log报只有下面两条。</p>
<p>Could not allocate Attr. DB entry<br>BGP x.x.x.x shutdown due to no memory condition (Prefix cannot be added)</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>1/ 这个log的Attr是attribution的意思，其实就是bgp那些属性，AS_PATH / Community 这些</p>
<p>2/ 一开始其实没有把重点放在属性这个东西上，原因是这个客户之前遇到过由于BMP耗尽BGP内存导致邻居down的类似故障，所以第一反应是BGP自己的内存又因为某某原因耗尽了，根据log，怀疑是故障前设备收到burst前缀把bgp内存耗尽导致邻居down（断电过也没法从log判断这一点），开始的方向也一直是每隔几小时观察BGP进程内存以及系统内存使用情况。观察了一段时间，发现也没异常增长。</p>
<p>3/ 辗转了一会儿，意外发现，有个叫bgp share memory共享内存的东西，随着版本的不断迭代，不断扩容，后来证实bgp share memory正是存放bgp属性的地方，简单理解就是软件上给bgp前缀分了两块内存，其中一块内存专门放bgp前缀本身，另一块内存也就是共享内存专门存放bgp前缀所携带的属性</p>
<p>4/ 检查了客户的共享内存利用率，确实都90%，有些95%以上了，有了这个理论基础，自然怀疑是当时共享内存爆了导致邻居down</p>
<p>5/ 验证猜想，需要LAB重现，由于问题也在LAB复现了，所以说说LAB的复现情况</p>
<p>IXIA和9508建若干bgp邻居</p>
<p>IxNetwork不断打路由，并对这些路由随机附上一些random AS_PATH / community这些属性，LAB里单条前缀携带的属性会比较多</p>
<p>在总共打了将近20w路由的时候，问题复现，并且bgp占用的共享内存以及bgp属性占用的内存不断增加，以下是打路由期间每隔5s共享内存的占用情况，可以看到18:25:27时接近突破了共享内存阈值，随后同时间点18:25:27 所有邻居带着和客户一样的log down了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">18</span>:<span class="number">25</span>:<span class="number">10.895</span> GMT Mon Aug <span class="number">05</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line">Time source <span class="keyword">is</span> NTP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show process mem shared | <span class="keyword">in</span> bgp</span><br><span class="line"></span><br><span class="line">bgp                    <span class="number">0X75128000</span>     <span class="number">65536</span>+ (<span class="number">65540</span>)   <span class="number">48645</span>      <span class="number">16891</span>      <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">18</span>:<span class="number">25</span>:<span class="number">16.504</span> GMT Mon Aug <span class="number">05</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line">Time source <span class="keyword">is</span> NTP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show process mem shared | <span class="keyword">in</span> bgp</span><br><span class="line"></span><br><span class="line">bgp                    <span class="number">0X75128000</span>     <span class="number">65536</span>+ (<span class="number">65540</span>)   <span class="number">54770</span>      <span class="number">10766</span>      <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">18</span>:<span class="number">25</span>:<span class="number">22.115</span> GMT Mon Aug <span class="number">05</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line">Time source <span class="keyword">is</span> NTP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show process mem shared | <span class="keyword">in</span> bgp</span><br><span class="line"></span><br><span class="line">bgp                    <span class="number">0X75128000</span>     <span class="number">65536</span>+ (<span class="number">65540</span>)   <span class="number">60876</span>       <span class="number">4660</span>      <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">18</span>:<span class="number">25</span>:<span class="number">27.698</span> GMT Mon Aug <span class="number">05</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line">Time source <span class="keyword">is</span> NTP</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">show process mem shared | <span class="keyword">in</span> bgp</span><br><span class="line"></span><br><span class="line">bgp                    <span class="number">0X75128000</span>     <span class="number">65536</span>+ (<span class="number">65540</span>)   <span class="number">65341</span>        <span class="number">195</span>      <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">18</span>:<span class="number">25</span>:<span class="number">33.284</span> GMT Mon Aug <span class="number">05</span> <span class="number">2019</span></span><br><span class="line"></span><br><span class="line">Time source <span class="keyword">is</span> NTP</span><br></pre></td></tr></table></figure>

<p>这个LAB干的事儿其实就是验证前缀的属性存在share memory里，并且在属性过多的时候，会把share memory撑爆，并且导致share memory直接大量释放，可以看到利用率几乎归零，然后bgp邻居集体down</p>
<p>6/ 回过头看客户那儿的信息，基于邻居的数量以及从每个邻居学来的路由数量，估算大概齐单台9516就学到了近120w条路由，这些路由或多或少都携带了些属性，所以root cause大概率和我们的猜想一致。</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>1/ 优化网络，后来证实大部分路由都是无用路由，最后客户优化完印象中最后就剩几千条路由，优化后共享内存利用率是很低的</p>
<p>2/ 9.3.1开始共享内存从64M扩到了256M，所以升级也可以</p>
<p>回过头再看这个故障本身并不复杂，这里最关键的地方是故障重现，而复现方法无人尝试过，因此碰壁多次。</p>
<p>该故障印象最深刻的地方是：在Youtube上自学用IxNetwork打各种路由 &amp; 建各种邻居的方法，解了case，也感谢同事们提出了写宝贵思路和方向。</p>
]]></content>
      <tags>
        <tag>bgp</tag>
      </tags>
  </entry>
  <entry>
    <title>erspan丢包问题</title>
    <url>/2020/05/11/erspan-packet-loss-1/</url>
    <content><![CDATA[<ul>
<li>涉及的主机名/IP/MAC/端口编号已改</li>
</ul>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>由于问题能在LAB重现，就直接描述LAB的情况了</p>
<p>拓扑最小化精简了如下，确定实际转发路径前，网络涉及的设备估计至少20台以上</p>
<p><img src="/images/erspan1-1.png" alt="erspan1-1 topo"></p>
<p>1/ IXIA向N9K-09推300pps的tcp流量，packet size == 2000</p>
<p>2/ N9K-09上配置了erspan将e1/4收到的流量copy一份，并发生到erspan destination 3172上，erspan传输路径如拓扑所示</p>
<p>3/ 3172上用ethanalyzer抓包，看不到任何erspan流量，这个地方取决于原始流量大小，有小包的话，小包可能不丢</p>
<p>4/ 整体环境是EVPN的VxLAN环境，图中N9K-09 / N9K-08 / N9K-04都是VxLAN VTEP，但实际erspan走的是vrf default，沿途实际走的是underlay ospf/ipv4 bgp的路径</p>
<p>5/ N9K-08 SVI101以及N9K-04是3172的网关，VLAN101是non-vxlan vlan，属于default vrf，N9K-08连N9K-09的口是L3物理口，连N9K-04的口是L2 trunk，并且native vlan不是101</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>1/ 这种上来拓扑很大的问题，第一步最好能捋清楚实际转发路径并确定丢包点</p>
<p>2/ 刚开始用的方法是ACL看流统，但是实际有太多流量干扰，加上VxLAN环境下做ACL有些限制，所以索性放弃ACL。由于现网流量大，所以直接看counter计数或者SPAN_TO_CPU逐跳抓包的方式也不现实，不考虑。</p>
<p>3/ 换个方法，对erspan流提前写好ELAM配置，然后从配置erspan的第一跳N9K-09开始，做show forwarding route vrf default + ELAM，确定流量实际的出接口，并看ELAM是否显示丢包。每一个出接口确定后，到对应的lldp邻居。这一步连续做几次可以捋出实际转发穿越的路径，进一步简化后如上述拓扑所示</p>
<p>4/ 第三步一直追溯到N9K-08时，发现ELAM显示有丢包，显示mtu-failure</p>
<p>5/ 于是检查流量穿越的所有L2物理口/L3物理口/L3 SVI,发现直连erspan destination的SVI 101的MTU是1500，没改成9216，导致收到大包都记成mtu-failure流量，并上到CPU，当这样的流量速率超出copp设置的阈值时，copp丢包</p>
<p>6/ 把MTU的问题修复后，N9K-08显示不再丢包，第一个丢包点解决，继续排查，在N9K-08做ELAM，结果如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">9</span>K<span class="number">-08</span>(TAH-elam-insel6)<span class="comment"># report</span></span><br><span class="line">Initting block addresses</span><br><span class="line"> </span><br><span class="line">ELAM <span class="keyword">not</span> triggered yet on slot - <span class="number">1</span>, asic - <span class="number">0</span>, slice - <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">SUGARBOWL ELAM REPORT SUMMARY</span><br><span class="line">slot - <span class="number">1</span>, asic - <span class="number">0</span>, slice - <span class="number">1</span></span><br><span class="line">============================</span><br><span class="line"> </span><br><span class="line">Incoming Interface: Eth1/<span class="number">50</span>					&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 流量入接口</span><br><span class="line">Src Idx : <span class="number">0xc5</span>, Src BD : <span class="number">4152</span>				&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 流量出接口，需要结合<span class="string">'show interface hardware-mapping'</span>找这些索引对应的实际物理接口</span><br><span class="line">Outgoing Interface Info: dmod <span class="number">1</span>, dpid <span class="number">64</span></span><br><span class="line">Dst Idx : <span class="number">0x601</span>, Dst BD : <span class="number">101</span>      			&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; BD就是VLAN_ID，这里显示<span class="number">101</span>表示带上dot1q vlan_id <span class="number">101</span>发出去，没什么问题，<span class="number">101</span>就是server <span class="number">3172</span>所在的VLAN                                                                   </span><br><span class="line"> </span><br><span class="line">Packet Type: IPv4</span><br><span class="line"> </span><br><span class="line">Dst MAC address: CC:<span class="number">16</span>:<span class="number">7</span>E:<span class="number">7</span>D:<span class="number">8</span>D:<span class="number">59</span></span><br><span class="line">Src MAC address: <span class="number">2</span>C:<span class="number">33</span>:<span class="number">11</span>:EB:BE:<span class="number">13</span></span><br><span class="line"> </span><br><span class="line">Dst IPv4 address: <span class="number">10.51</span><span class="number">.208</span><span class="number">.122</span></span><br><span class="line">Src IPv4 address: <span class="number">10.212</span><span class="number">.255</span><span class="number">.123</span></span><br><span class="line">Ver     =  <span class="number">4</span>, DSCP    =    <span class="number">0</span>, Don<span class="string">'t Fragment = 0</span></span><br><span class="line"><span class="string">Proto   = 47, TTL     =  255, More Fragments = 0</span></span><br><span class="line"><span class="string">Hdr len = 20, Pkt len = 2032, Checksum       = 0xd6e8</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">L4 Protocol  : 47</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Drop Info:</span></span><br><span class="line"><span class="string">----------</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">LUA:</span></span><br><span class="line"><span class="string">LUB:</span></span><br><span class="line"><span class="string">LUC:</span></span><br><span class="line"><span class="string">LUD:</span></span><br><span class="line"><span class="string">Final Drops:</span></span><br></pre></td></tr></table></figure>

<p>7/ N9K04也做个ELAM如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">F340<span class="number">.08</span><span class="number">.25</span>-N9K-C93108<span class="number">-4</span>(TAH-elam-insel6)<span class="comment"># report</span></span><br><span class="line">Initting block addresses</span><br><span class="line"> </span><br><span class="line">ELAM <span class="keyword">not</span> triggered yet on slot - <span class="number">1</span>, asic - <span class="number">0</span>, slice - <span class="number">0</span></span><br><span class="line"> </span><br><span class="line">SUGARBOWL ELAM REPORT SUMMARY</span><br><span class="line">slot - <span class="number">1</span>, asic - <span class="number">0</span>, slice - <span class="number">1</span></span><br><span class="line">============================</span><br><span class="line"> </span><br><span class="line">Incoming Interface: Eth1/<span class="number">49</span></span><br><span class="line">Src Idx : <span class="number">0x601</span>, Src BD : <span class="number">1</span>                        &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 收到包后识别的vlan_id是错的，应该是上方的<span class="number">101</span>才对</span><br><span class="line">Outgoing Interface Info: dmod <span class="number">0</span>, dpid <span class="number">0</span>            &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 所以出接口是错的</span><br><span class="line">Dst Idx : <span class="number">0x0</span>, Dst BD : <span class="number">1</span></span><br><span class="line"> </span><br><span class="line">Packet Type: IPv4</span><br><span class="line"> </span><br><span class="line">Dst MAC address: B0:AA:<span class="number">77</span>:<span class="number">49</span>:<span class="number">19</span>:<span class="number">3</span>C</span><br><span class="line">Src MAC address: CC:<span class="number">16</span>:<span class="number">7</span>E:<span class="number">7</span>D:<span class="number">8</span>D:<span class="number">59</span></span><br><span class="line"> </span><br><span class="line">Dst IPv4 address: <span class="number">10.51</span><span class="number">.208</span><span class="number">.122</span></span><br><span class="line">Src IPv4 address: <span class="number">10.212</span><span class="number">.255</span><span class="number">.123</span></span><br><span class="line">Ver     =  <span class="number">4</span>, DSCP    =    <span class="number">0</span>, Don<span class="string">'t Fragment = 0</span></span><br><span class="line"><span class="string">Proto   = 47, TTL     =  255, More Fragments = 0</span></span><br><span class="line"><span class="string">Hdr len = 20, Pkt len = 2032, Checksum       = 0xd69d</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">L4 Protocol  : 47</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Drop Info:</span></span><br><span class="line"><span class="string">----------</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">LUA:</span></span><br><span class="line"><span class="string">LUB:</span></span><br><span class="line"><span class="string">LUC:</span></span><br><span class="line"><span class="string">LUD:</span></span><br><span class="line"><span class="string">  SRC_VLAN_MBR</span></span><br><span class="line"><span class="string">Final Drops:</span></span><br><span class="line"><span class="string">  SRC_VLAN_MBR                                    &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; elam显示有drop reason的时候，就代表包被丢在这台设备上了</span></span><br></pre></td></tr></table></figure>

<p>8/ 所以第二个丢包点也很明朗了，要么是N9K-08发出包的时候实际没打VLAN TAG，要么是N9K-04收到正确的VLAN TAG但识别错vlan_id</p>
<p>把这些东西汇总下搜搜bug，找到个匹配的CSCvr72258 ERPSAN traffic flowing though Sugarbowl exits untagged.</p>
<p>bug触发条件以及workaround如下：</p>
<p>Conditions:<br>A nexus 9300-EX must be in the following configuration:</p>
<ul>
<li>A VxLAN uplink toward spines<ul>
<li>A L3 interface on which the ERSPAN encapsulated traffic arrives</li>
<li>A L2 Trunk interface on which the ERSPAN traffic is exiting</li>
</ul>
</li>
</ul>
<p>ERSPAN traffic:</p>
<ul>
<li>The destination IP (end of the tunnel) resides in a vlan that is extedend over VxLAN (VNI mapping)  &lt;&lt;&lt;&lt; 这条不需要满足也会有这个问题</li>
<li>The ERSPAN traffic is not crossing the VxLAN fabric</li>
</ul>
<p>Workaround:<br>Change the ingress interface from L3 to L2 (access or trunk)<br>Or<br>Use system nve infra-vlans  when the vlan’s SVI is in default VRF</p>
<p>简单说就是一台VxLAN VTEP设备，从连spine的L3口收到erspan流量的时候，并且准备将该流量从一个L2 trunk转发出去的时候，这个dot1q vlan tag会没打上就发出去，导致的结果就是下游设备收到带VLAN TAG的正常erspan流量，导致包全在下游设备丢弃。</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>这个问题有好几个workaround，</p>
<p>1/ 让包出去的时候，不打TAG也能让下游识别成VLAN 101，所以自然是把这个trunk链路的native vlan改成101，这样N9K-08发出不带VLAN TAG的流量，下游就直接认为是VLAN101，这个LAB测试过可行。 但这个可能实际网络中没条件改，</p>
<p>2/ 把VLAN 101关联到infra-vlan中，这个LAB测试可行，最后客户也用的这种，infra-vlan典型的两个场景是：VTEP传IP-IP tunnel流量 &amp; vPC vxlan leaf对应uplink failover场景跨peer-link建bgp邻居等涉及流量备用路径的功能，有机会的话专门写一篇infra-vlan介绍。一般推荐把VTEP上的default vlan关联到infra-vlan，来传一些特殊的非vxlan流量。</p>
<p>3/ 流量入接口改成L2，感觉已经成型的有业务的网络，不太可能用这种，所以LAB也没再去验证可行性。</p>
<p>这个故障本身还算复杂，加上中间还衍生了很多其他问题，这里也只是记录了其中一个，所有问题彻底搞完消耗了很多精力，不过好在全解了，也算欣慰，完结撒花！！！</p>
]]></content>
      <tags>
        <tag>erspan</tag>
      </tags>
  </entry>
  <entry>
    <title>N9K I77下client无法通过dhcp获取地址</title>
    <url>/2020/05/10/unable-to-get-address-from-dhcp-on-I77/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="/images/dhcp1-1.png" alt="dhcp1-1 topo"></p>
<p>1/ dhcp server与dhcp client直连N9K 7.0(3)I7(7)，并且同属VLAN103网段</p>
<p>2/ N9K通过连接client与server的端口的关键配置是LACP &amp; no lacp suspend-individual &amp; trunk native 103</p>
<p>3/ 客户反馈当有port-channel时，client无法从dhcp server获取地址，而当接口摘除port-channel配置后，就可以拿到地址</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>1/ 客户告知client网卡发包不会带上VLAN_TAG，所以N9K收到client的流量应该识别成native vlan 103<br>另外client在拿到地址前，client网卡是不会关联到LACP的，拿到地址后client网卡会自动关联到LACP mode，所以初始状态下客户需要在N9K上连接client的端口使用命令no lacp suspend-individual来避免N9K因收不到client过来的LACPDU而suspend物理口的情况，所以在该命令作用下，e1/2的初始状态是individual</p>
<p>2/ 由于是测试环境几乎没有流量，所以在故障状态下，用SPAN_TO_SPU的方式抓e1/2 rx的包，N9K可以抓到client发来的dhcp discover</p>
<p>3/ 在故障状态下，用SPAN_TO_CPU的方式抓e1/1 tx的包，N9K抓不到client发来的dhcp discover</p>
<p>4/ 通过2和3，确定丢包点是N9K，下一步就是做elam看丢包原因了，从elam结果中我们可以看到e1/2收到的discover包后，错误地识别成VLAN1，所以自然无法转发到同subnet VLAN103的dhcp server</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">SZYF-A1<span class="number">-201</span>-A06-T1<span class="number">-01</span><span class="number">-04</span><span class="number">-231.4</span>(TAH-elam-insel6)<span class="comment"># set outer l2 src_mac bbbb.bbbb.bbbb dst_mac ffff.ffff.ffff </span></span><br><span class="line">SZYF-A1<span class="number">-201</span>-A06-T1<span class="number">-01</span><span class="number">-04</span><span class="number">-231.4</span>(TAH-elam-insel6)<span class="comment"># start</span></span><br><span class="line">SZYF-A1<span class="number">-201</span>-A06-T1<span class="number">-01</span><span class="number">-04</span><span class="number">-231.4</span>(TAH-elam-insel6)<span class="comment"># report</span></span><br><span class="line">Initting block addresses</span><br><span class="line"></span><br><span class="line">SUGARBOWL ELAM REPORT SUMMARY</span><br><span class="line">slot - <span class="number">1</span>, asic - <span class="number">0</span>, slice - <span class="number">0</span></span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">Incoming Interface: Eth1/<span class="number">2</span>					&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; dhcp包从e1/<span class="number">2</span>进来</span><br><span class="line">Src Idx : <span class="number">0x5</span>, Src BD : <span class="number">1</span>					&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Src BD表示流量收到别识别成的VLAN_ID，此处有误，应该是VLAN103才对</span><br><span class="line">Outgoing Interface Info: met_ptr <span class="number">0</span></span><br><span class="line"></span><br><span class="line">Packet Type: IPv4</span><br><span class="line"></span><br><span class="line">Dst MAC address: FF:FF:FF:FF:FF:FF</span><br><span class="line">Src MAC address: B8:BB:BB:BB:BB:BB</span><br><span class="line"></span><br><span class="line">Dst IPv4 address: <span class="number">255.255</span><span class="number">.255</span><span class="number">.255</span></span><br><span class="line">Src IPv4 address: <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">Ver     =  <span class="number">4</span>, DSCP    =    <span class="number">4</span>, Don<span class="string">'t Fragment = 0</span></span><br><span class="line"><span class="string">Proto   = 17, TTL     =  128, More Fragments = 0</span></span><br><span class="line"><span class="string">Hdr len = 20, Pkt len =  328, Checksum       = 0x3996</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">L4 Protocol  : 17</span></span><br><span class="line"><span class="string">UDP Dst Port : 67</span></span><br><span class="line"><span class="string">UDP Src Port : 68</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Drop Info:									&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Drop Info要是不为空，通常表示这个包丢了，并且会记录drop reason</span></span><br><span class="line"><span class="string">----------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">LUA:</span></span><br><span class="line"><span class="string">LUB:</span></span><br><span class="line"><span class="string">LUC:</span></span><br><span class="line"><span class="string">LUD:</span></span><br><span class="line"><span class="string">  OUTER_IDS_G0</span></span><br><span class="line"><span class="string">Final Drops:</span></span><br><span class="line"><span class="string">ELAM not triggered yet on slot - 1, asic - 0, slice - 1</span></span><br></pre></td></tr></table></figure>

<p>5/ 用下面的命令发现l2一致性校验不通过，并且指示native vlan软硬件编程不同步，这也和上述elam结果一致</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N9K<span class="comment"># sh consistency-checker l2 switchport interface ethernet 1/2</span></span><br><span class="line">Checking <span class="keyword">for</span> interface: Ethernet1/<span class="number">2</span></span><br><span class="line">SW <span class="keyword">and</span> HW trunk native VLAN <span class="keyword">not</span> same</span><br><span class="line">SW Trunk Native VLAN: <span class="number">103</span></span><br><span class="line">HW Trunk Native VLAN<span class="string">" 1</span></span><br><span class="line"><span class="string">Seoul2# 2020 Jan  8 13:22:56 Seoul2 %$ VDC-1 %$ vshd: CC_SWITCHPORT: Consistency Check: FAILED		&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></span><br></pre></td></tr></table></figure>

<p>6/ 最后，这个问题是中了bug CSCvr81063 - Native VLAN hardware mis-programming happens in tah after upgrade to 7.0.3.I7.7 with LACP individual</p>
<p>触发条件就是N9K I77 &amp; N9K lacp suspend-individual &amp; client NIC non-lacp</p>
<p>bug链接：<br><a href="https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvr81063" target="_blank" rel="noopener">https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvr81063</a></p>
<p>bug smu链接：<br><a href="https://software.cisco.com/download/home/286312403/type/286278856/release/7.0(3)I7(7)?catid=268438038" target="_blank" rel="noopener">https://software.cisco.com/download/home/286312403/type/286278856/release/7.0(3)I7(7)?catid=268438038</a></p>
<h3 id="不改动现有配置的解决方法"><a href="#不改动现有配置的解决方法" class="headerlink" title="不改动现有配置的解决方法"></a>不改动现有配置的解决方法</h3><p>由于是中了BUG，并且该bug有SMU可打，所以解决方法自然是要么打SMU补丁，要么升级到bug修复版本</p>
<p>打SMU步骤可以参考如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span>/ install add bootflash:nxos.CSCvr81063-n9k_ALL<span class="number">-1.0</span><span class="number">.0</span><span class="number">-7.0</span><span class="number">.3</span>.I7<span class="number">.7</span>.lib32_n9000.rpm</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>/ install activate nxos.CSCvr81063-n9k_ALL<span class="number">-1.0</span><span class="number">.0</span><span class="number">-7.0</span><span class="number">.3</span>.I7<span class="number">.7</span>.lib32_n9000.rpm</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>/ install commit nxos.CSCvr81063-n9k_ALL<span class="number">-1.0</span><span class="number">.0</span><span class="number">-7.0</span><span class="number">.3</span>.I7<span class="number">.7</span>.lib32_n9000.rpm</span><br></pre></td></tr></table></figure>

<p>最后客户反馈打上SMU后，一致性校验通过，故障解决，完结撒花。</p>
]]></content>
      <tags>
        <tag>dhcp</tag>
      </tags>
  </entry>
  <entry>
    <title>N3548 hsrp双活，直连ping不通</title>
    <url>/2020/05/10/hsrp-dual-active/</url>
    <content><![CDATA[<ul>
<li>涉及的主机名/IP/MAC/端口编号已改</li>
</ul>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="/images/arp1-1.png" alt="arp1-1 topo"></p>
<p>1/ N3548软件版本7.0(3)I7(6)</p>
<p>2/ SVI101这个hsrp instance双活dual active</p>
<p>3/ 客户反馈两边SVI101互ping不通，互联的物理口配置是trunk &amp; allow all vlan</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>先从SVI互ping不通的问题切入排查</p>
<p>1/ ping不通显示Destination Host Unreachable，说明3548-1解析不到3548-2 SVI101的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N3548<span class="number">-1</span><span class="comment"># ping 10.1.1.3</span></span><br><span class="line">PING <span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span> (<span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span>): <span class="number">56</span> data bytes</span><br><span class="line"><span class="number">36</span> bytes <span class="keyword">from</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span>: Destination Host Unreachable</span><br><span class="line">Request <span class="number">0</span> timed out</span><br><span class="line"><span class="number">36</span> bytes <span class="keyword">from</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span>: Destination Host Unreachable</span><br><span class="line">^C</span><br><span class="line">--- <span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span> ping statistics ---</span><br><span class="line"><span class="number">2</span> packets transmitted, <span class="number">0</span> packets received, <span class="number">100.00</span>% packet loss</span><br><span class="line"></span><br><span class="line">N3548<span class="number">-1</span><span class="comment"># sh ip arp | i 10.1.213.3</span></span><br><span class="line"><span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span>      <span class="number">00</span>:<span class="number">00</span>:<span class="number">08</span>  INCOMPLETE      Vlan101	&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; INCOMPLETE</span><br></pre></td></tr></table></figure>

<p>2/ ping的时候在3548-1和3548-2上同时ethanalyzer arp，3548-1说自己发了arp request，3548-2却说自己没收到arp request</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">N3548-1#</span> <span class="string">ethanalyzer</span> <span class="string">local</span> <span class="string">interface</span> <span class="string">inband</span> <span class="string">display-filter</span> <span class="string">arp</span> <span class="string">limit-captured-frames</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="string">Capturing</span> <span class="string">on</span> <span class="string">inband</span></span><br><span class="line"><span class="attr">wireshark-cisco-mtc-dissector:</span> <span class="string">ethertype=0xde09,</span> <span class="string">devicetype=0x0</span></span><br><span class="line"></span><br><span class="line"><span class="number">2020</span><span class="number">-04</span><span class="number">-28</span> <span class="number">09</span><span class="string">:55:54.350286</span> <span class="string">7c:21:0e:2c:75:fc</span> <span class="string">-&gt;</span> <span class="string">ff:ff:ff:ff:ff:ff</span> <span class="string">ARP</span> <span class="string">Who</span> <span class="string">has</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span><span class="string">?</span>  <span class="string">Tell</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line"><span class="number">2020</span><span class="number">-04</span><span class="number">-28</span> <span class="number">09</span><span class="string">:55:58.356976</span> <span class="string">7c:21:0e:2c:75:fc</span> <span class="string">-&gt;</span> <span class="string">ff:ff:ff:ff:ff:ff</span> <span class="string">ARP</span> <span class="string">Who</span> <span class="string">has</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span><span class="string">?</span>  <span class="string">Tell</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>

<p>3/ 在3548-2上清copp计数，随后在发起N35-1发起ping的时候，观察copp counter，发现只要N35-1 ping了几个包，N35-2 copp arp queue就显示丢几个包</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N3548<span class="number">-1</span>共ping了<span class="number">3</span>个包后</span><br><span class="line"></span><br><span class="line">N3548<span class="number">-2</span><span class="comment"># show policy-map interface control-plane | i arp next 5</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">arp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 200 </span></span><br><span class="line"><span class="class">        <span class="title">HW</span> <span class="title">Matched</span> <span class="title">Packets</span>    9</span></span><br><span class="line"><span class="class">        <span class="title">SW</span> <span class="title">Matched</span> <span class="title">Packets</span>    6			&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class="title">HW</span>表示硬件接口实际收到了多少包，<span class="title">SW</span>表示实际多少包上到上层<span class="title">arp</span>进程去处理，如果二者相等表示<span class="title">COPP</span>无丢包，如果二者不等，说明包被<span class="title">COPP</span>丢了，这里表明丢了3个包，正好和我们丢的3个<span class="title">ping</span>包能对上</span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">ptp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 1000 </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">N3548</span>-1共<span class="title">ping</span>了4个包后</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">N3548</span>-2# <span class="title">show</span> <span class="title">policy</span>-<span class="title">map</span> <span class="title">interface</span> <span class="title">control</span>-<span class="title">plane</span> | <span class="title">i</span> <span class="title">arp</span> <span class="title">next</span> 5</span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">arp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 200 </span></span><br><span class="line"><span class="class">        <span class="title">HW</span> <span class="title">Matched</span> <span class="title">Packets</span>    10</span></span><br><span class="line"><span class="class">        <span class="title">SW</span> <span class="title">Matched</span> <span class="title">Packets</span>    6			&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 这里表面丢了4个包，正好和我们丢的4个<span class="title">ping</span>包能对上</span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">ptp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 1000</span></span><br></pre></td></tr></table></figure>

<p>通过这一步明显看出包都丢在copp上了，但诡异的地方也在这里，上述输出可以看到copp为arp设置的阈值是200pps，理论上说N3548-2 CPU收到的arp速率得在200pps以上才会触发copp丢包才对，所以此处是个疑点，先mark</p>
<p>4/ 继续查看3548-2的syslog，发现过去两周内有一些接口flapping的log，这种flap有可能是trigger，但客户反馈不清楚故障发生的准确时间，所以也先mark</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">We can see e1/<span class="number">27</span>(unused port) staus change two week ago</span><br><span class="line"></span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">46</span> N3548<span class="number">-2</span> %ETHPORT<span class="number">-5</span>-IF_HARDWARE: Interface Ethernet1/<span class="number">27</span>, hardware type changed to <span class="number">1</span>G</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">55</span> N3548<span class="number">-2</span> %ETHPORT<span class="number">-5</span>-IF_HARDWARE: Interface Ethernet1/<span class="number">27</span>, hardware type changed to No-Transceiver</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">56</span> N3548<span class="number">-2</span> %ETHPORT<span class="number">-5</span>-IF_DOWN_NONE: Interface Ethernet1/<span class="number">27</span> <span class="keyword">is</span> down (<span class="literal">None</span>)</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">40</span>:<span class="number">25</span> N3548<span class="number">-2</span> %VSHD<span class="number">-5</span>-VSHD_SYSLOG_CONFIG_I: Configured <span class="keyword">from</span> vty by admin on console0</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">10</span>:<span class="number">14</span>:<span class="number">51</span> N3548<span class="number">-2</span> last message repeated <span class="number">1</span> time</span><br></pre></td></tr></table></figure>

<p>5/ 最后结合这些现象，hsrp双活以及arp无法解析的问题命中bug CSCvs97553 ARP/HSRP Cannot be punt to CPU after some link state change</p>
<p>bug症状与触发条件如下<br>In warp/normal mode, if the interface has some changes such as shutdown or unplugging the optical module,the remaining Layer 2 interfaces will fail to send ARP/HSRP packets to the CPU, whether unicast ARP or broadcast ARP.</p>
<p>Only 7.3(3)I7(6) and later will hit this issue</p>
<p>bug链接<br><a href="https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvs97553" target="_blank" rel="noopener">https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvs97553</a></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>3548升级到修复版本I7(8)或者9.3(4)规避该bug</p>
<p>最后，客户反馈升级到I78后，故障解决，完结撒花。</p>
]]></content>
      <tags>
        <tag>arp</tag>
      </tags>
  </entry>
  <entry>
    <title>mtu-failure copp计数问题</title>
    <url>/2020/05/10/copp/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>在与客户排查erspan丢包问题时产生的衍生问题，客户发现当现网有大量mtu-failure的流量(如SVI101 MTU1500，而实际需要穿越SVI101的packet size &gt; 1500)的时候，copp显示包丢在class-map copp-system-p-class-exception而非mtu-failure所在的copp-system-p-class-exception-diag里</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">exception</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ip</span> <span class="title">option</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ip</span> <span class="title">icmp</span> <span class="title">unreachable</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ipv6</span> <span class="title">option</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ipv6</span> <span class="title">icmp</span> <span class="title">unreachable</span></span></span><br><span class="line"><span class="class">      <span class="title">set</span> <span class="title">cos</span> 1</span></span><br><span class="line">      police cir 150 kbps , bc 32000 bytes </span><br><span class="line">      module <span class="number">1</span> :</span><br><span class="line">        transmitted <span class="number">416162</span> bytes;</span><br><span class="line">        dropped <span class="number">23188</span> bytes;			&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 实际mtu-failure的流量都hit到这个<span class="class"><span class="keyword">class</span>-<span class="title">map</span>里</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">exception</span>-<span class="title">diag</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ttl</span>-<span class="title">failure</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">mtu</span>-<span class="title">failure</span>		&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class="title">mtu</span>-<span class="title">failure</span>所在的<span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">exception</span>-<span class="title">diag</span>没有匹配到<span class="title">mtu</span>-<span class="title">failure</span>的流量</span></span><br><span class="line"><span class="class">      <span class="title">set</span> <span class="title">cos</span> 1</span></span><br><span class="line">      police cir 150 kbps , bc 32000 bytes </span><br><span class="line">      module <span class="number">1</span> :</span><br><span class="line">        transmitted <span class="number">0</span> bytes;</span><br><span class="line">        dropped <span class="number">0</span> bytes;</span><br></pre></td></tr></table></figure>

<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>1/ LAB中测试往N9K打mtu-failure流量，问题能复现</p>
<p>2/ 目测正常行为，查文档看到有下面这句话可以解释这个现象</p>
<p>For Cisco Nexus 9200 Series switches, ip icmp redirect, ipv6 icmp redirect, ip icmp unreachable, ipv6 icmp unreachable, and mtu-failure use the same TCAM entry, and they will all be classified to the class map where the first exception is present in the policy. In the CoPP strict profile, they are classified to the class-exception class map. In a different CoPP policy, if the first exception is in a different class map (for example, class-exception-diag), the rest of the exceptions will be classified to the same class map.</p>
<p>这句话意思是ip icmp redirect, ipv6 icmp redirect, ip icmp unreachable, ipv6 icmp unreachable, and mtu-failure由于design上是写在同一个hardware TCAM entry里的，所以实际上这些exception是一起计数的，并且都会一起计数到第一个包含这些任意exception的class-map里。</p>
<p>3/ LAB举例说明一下，比如我手动定义COPP policy-map，只包含两个class-map class ip icmp unreachable和class default</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N9K<span class="number">-08</span>(config-pmap)<span class="comment"># show policy-map interface control-plane</span></span><br><span class="line">Control Plane</span><br><span class="line"> </span><br><span class="line">  Service-policy  input: test</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">ip</span>-<span class="title">icmp</span>-<span class="title">unreachable</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ip</span> <span class="title">icmp</span> <span class="title">unreachable</span>                &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 我在这个<span class="title">class</span>-<span class="title">map</span>里只<span class="title">match</span>了<span class="title">ip</span> <span class="title">icmp</span> <span class="title">unreachable</span>的<span class="title">exception</span>流量</span></span><br><span class="line">      police cir 100000 bps , bc 32000 bytes </span><br><span class="line">      module <span class="number">1</span> :</span><br><span class="line">        transmitted <span class="number">119288</span> bytes;</span><br><span class="line">        dropped <span class="number">4719936</span> bytes;                           &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 往这台N9K打大量mtu-failure的tcp流量的时候，这个<span class="class"><span class="keyword">class</span>-<span class="title">map</span>的<span class="title">drop</span>就开始涨了</span></span><br><span class="line"><span class="class"> </span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">class</span>-<span class="title">default</span> <span class="params">(match-any)</span></span></span><br><span class="line">      police cir 10000 bps , bc 32000 bytes </span><br><span class="line">      module <span class="number">1</span> :</span><br><span class="line">        transmitted <span class="number">1514</span> bytes;</span><br><span class="line">        dropped <span class="number">0</span> bytes;</span><br><span class="line"></span><br><span class="line">这个现象的原因就如上面文档描述，ip icmp unreachable和mtu-failure这些exception是一起计数的</span><br></pre></td></tr></table></figure>

<p>再回到设备默认的COPP policy-map，默认包含exception的class-map顺序如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N9K<span class="number">-08</span>(config)<span class="comment"># show policy-map interface control-plane | i exception prev 3</span></span><br><span class="line">  Service-policy  input: copp-system-p-policy-strict</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">l3uc</span>-<span class="title">data</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">glean</span></span></span><br><span class="line"><span class="class">--</span></span><br><span class="line">        dropped 0 bytes;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">l3mc</span>-<span class="title">data</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">multicast</span> <span class="title">rpf</span>-<span class="title">failure</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">multicast</span> <span class="title">dest</span>-<span class="title">miss</span></span></span><br><span class="line"><span class="class">--</span></span><br><span class="line">        transmitted 0 bytes;</span><br><span class="line">        dropped <span class="number">0</span> bytes;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">exception</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ip</span> <span class="title">option</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ip</span> <span class="title">icmp</span> <span class="title">unreachable</span>              </span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ipv6</span> <span class="title">option</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ipv6</span> <span class="title">icmp</span> <span class="title">unreachable</span></span></span><br><span class="line"><span class="class">--</span></span><br><span class="line">        transmitted 5147116 bytes;</span><br><span class="line">        dropped <span class="number">132431076</span> bytes;</span><br><span class="line"> </span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">exception</span>-<span class="title">diag</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">ttl</span>-<span class="title">failure</span></span></span><br><span class="line"><span class="class">      <span class="title">match</span> <span class="title">exception</span> <span class="title">mtu</span>-<span class="title">failure</span></span></span><br></pre></td></tr></table></figure>

<p>copp-system-p-class-exception是第一个包含ip icmp redirect, ipv6 icmp redirect, ip icmp unreachable, ipv6 icmp unreachable, and mtu-failure这些任意一个exception的class-map，所以这几个exception统统记录到class-map copp-system-p-class-exception里。</p>
]]></content>
      <tags>
        <tag>copp</tag>
      </tags>
  </entry>
  <entry>
    <title>启用erspan truncation后丢包</title>
    <url>/2020/05/10/erspan-packet-loss/</url>
    <content><![CDATA[<ul>
<li>涉及的主机名/IP/MAC/端口编号已改</li>
</ul>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>由于问题能在LAB重现，就直接描述LAB的情况了</p>
<p>拓扑</p>
<p><img src="/images/erspan1-1.png" alt="erspan1-1 topo"></p>
<p>1/ IXIA向N9K-09推300pps的tcp流量，packet size == 2000</p>
<p>2/ N9K-09上配置了erspan将e1/4收到的流量copy一份，并发生到erspan destination 3172上，erspan传输路径如拓扑所示</p>
<p>3/ 为了控制erspan流量大小，在N9K做了erspan truncation，即在erspan session中配置了MTU 1000</p>
<p>4/ 3172上用ethanalyzer抓包，看不到任何erspan流量</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>1/ IXIA打出来的frame size以及原始IP header中的length是2000，启用erspan truncation后，frame size被强行截成1000+erspan header size，所以把沿途传输的erspan包抓下来如下，对于inner ip header，wireshark显示IPv4 total length exceed packet length</p>
<p><img src="/images/erspan1-3.png" alt="erspan1-3 topo"></p>
<p>N9K默认会检查包的IP header length部分，对于IP-IP tunnel的报文(此处是erspan)会检查内外层ip header的length做校验，和frame size进行比较，看是否有异常，所以这个包来说，由于包被截过，导致inner ip header length &gt; frame size，这样的包会被N9K-08认做错包，记output error错包从Po20，又N9K默认是cut-through模式，所以沿途N9K能看到的现象是，N9K-04入接口有input error，N9K-04出接口有output error，最后3172收到后也记input error，包在接口丢弃，故ethanalyzer抓不到erspan流量</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>关闭inner packet length校验功能，关闭后output error / input error问题消失，并且3172就能通过ethanalyzer收到所有erspan流量了</p>
]]></content>
      <tags>
        <tag>erspan</tag>
      </tags>
  </entry>
  <entry>
    <title>sla down</title>
    <url>/2020/05/11/sla-down/</url>
    <content><![CDATA[<ul>
<li>涉及的主机名/IP/MAC/端口编号已改</li>
</ul>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>客户I75a &amp; N9K下，有这么个配置：</p>
<p>track 1 ip sla 1 reachability<br>track 2 ip sla 2 reachability<br>track 3 ip sla 3 reachability<br>track 4 ip sla 4 reachability<br>track 5 ip sla 4 reachability</p>
<p>track 15 list boolean or<br>  object 1<br>  object 2<br>  object 3<br>  object 4<br>  object 5</p>
<p>大概是这样：VxLAN环境下，leaf上定义了5个SLA，这5个SLA会通过icmp探针，探测远端某个border-leaf的可达性，每个SLA追溯的border-leaf都不同，这些LSA都各自关联到小track，随后定义了一个大track把这些小track或起来，然后写了个EEM策略，当大track down时，做自动shut所有端口的action，客户逻辑是大track down表明所有小track都down了，即所有border-leaf均不可达，为保护下游server，于是这台设备shut所有端口做自我隔离</p>
<p>客户某天发现大track down触发了隔离行为，于是来追溯当时大track down的原因，track down后过了5秒自动又up</p>
<h3 id="故障分析"><a href="#故障分析" class="headerlink" title="故障分析"></a>故障分析</h3><p>1/ 大track down，说明小track故障瞬间全down，小track全down说明，说明故障瞬间发送到所有border-leaf的icmp探针全部没发出/发出的探针丢在request方向丢在沿途/发出的探针在reply方向丢在沿途/发出的探针在reply方向丢在本端/接口层面包收发都没丢但SLA进程未处理reply回包/这种瞬时故障立刻恢复的可能性实在太多，不好查。</p>
<p>2/ 检查了接口counter都很干净，检查COPP counter，唯一有drop并且有增长的地方是default-copp，但sla使用的是icmp探针，要icmp reply真丢在本端，理论上也该是丢在icmp copp queue里，所以其实很难说故障瞬时丢的5个ICMP包就是丢在这台leaf上</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">monitoring</span> <span class="params">(match-any)</span>    &gt;&gt;&gt;&gt;&gt;&gt; <span class="title">monitoring</span> <span class="title">queue</span></span></span><br><span class="line"><span class="class">  <span class="title">match</span> <span class="title">access</span>-<span class="title">group</span> <span class="title">name</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">acl</span>-<span class="title">icmp</span></span></span><br><span class="line"><span class="class">  <span class="title">match</span> <span class="title">access</span>-<span class="title">group</span> <span class="title">name</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">acl</span>-<span class="title">icmp6</span></span></span><br><span class="line"><span class="class">  <span class="title">match</span> <span class="title">access</span>-<span class="title">group</span> <span class="title">name</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">acl</span>-<span class="title">traceroute</span></span></span><br><span class="line"><span class="class">  <span class="title">set</span> <span class="title">cos</span> 1</span></span><br><span class="line">  police cir 360 kbps , bc 128000 bytes </span><br><span class="line">  module <span class="number">1</span> :</span><br><span class="line">    transmitted <span class="number">16060</span> bytes;                            </span><br><span class="line">    dropped <span class="number">0</span> bytes;                        &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; ICMP COPP Queue没有丢包                  </span><br><span class="line">    monitoring queue transmitted <span class="number">16060</span> bytes, drop <span class="number">0</span> bytes</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">class</span>-<span class="title">default</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">  <span class="title">set</span> <span class="title">cos</span> 0</span></span><br><span class="line">  police cir 400 kbps , bc 32000 bytes </span><br><span class="line">  module <span class="number">1</span> :</span><br><span class="line">    transmitted <span class="number">20869421401</span> bytes;</span><br><span class="line">    dropped 512670 bytes;  		            &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; COPP Q里唯一有drop的是class-default                                            default queue transmitted 20869421401 bytes, drop 512670 bytes</span><br></pre></td></tr></table></figure>

<p>3/ 之后客户的track又down了一次，这一次把copp又拿过来和第一次收集的信息进行对比，发现大问题了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">class</span>-<span class="title">monitoring</span> <span class="params">(match-any)</span>      &gt;&gt;&gt;&gt;&gt;&gt; <span class="title">monitoring</span> <span class="title">queue</span></span></span><br><span class="line"><span class="class">  <span class="title">match</span> <span class="title">access</span>-<span class="title">group</span> <span class="title">name</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">acl</span>-<span class="title">icmp</span></span></span><br><span class="line"><span class="class">  <span class="title">match</span> <span class="title">access</span>-<span class="title">group</span> <span class="title">name</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">acl</span>-<span class="title">icmp6</span></span></span><br><span class="line"><span class="class">  <span class="title">match</span> <span class="title">access</span>-<span class="title">group</span> <span class="title">name</span> <span class="title">copp</span>-<span class="title">system</span>-<span class="title">p</span>-<span class="title">acl</span>-<span class="title">traceroute</span></span></span><br><span class="line"><span class="class">  <span class="title">set</span> <span class="title">cos</span> 1</span></span><br><span class="line">  police cir 360 kbps , bc 128000 bytes </span><br><span class="line">  module <span class="number">1</span> :</span><br><span class="line">    transmitted <span class="number">16060</span> bytes;                           </span><br><span class="line">    dropped <span class="number">0</span> bytes;                     &lt;&lt;&lt;&lt;&lt;&lt; dropped没涨就算了，trasmitted也没涨，肯定说明我们这里的sla流量没有落到这个Q里 </span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">class</span>-<span class="title">default</span> <span class="params">(match-any)</span> </span></span><br><span class="line"><span class="class">  <span class="title">set</span> <span class="title">cos</span> 0</span></span><br><span class="line">  police cir 400 kbps , bc 32000 bytes </span><br><span class="line">  module <span class="number">1</span> :</span><br><span class="line">    transmitted <span class="number">22253226046</span> bytes; </span><br><span class="line">    dropped <span class="number">14953655</span> bytes;              &lt;&lt;&lt;&lt;&lt;&lt; 后来在LAB里证实vxlan下icmp_based_sla的流量都落到这个queue里了</span><br></pre></td></tr></table></figure>

<p>4/ 这个COPP计数记错queue的问题匹配如下bug，简单说就是VxLAN环境下，在某些版本下，icmp包会错误地计数到copp default queue里</p>
<p>CSCvn37878 Ping to N9k VXLAN VTEP Tenant IP address dropped in CoPP Class Default</p>
<p>Symptom:<br>VXLAN VTEP Tenant IP address dropped in CoPP Class Default due to packet wrong classification.</p>
<p>Conditions:<br>This is seen on 7.0(3)I7(5), I7(5a).</p>
<p><a href="https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvn37878" target="_blank" rel="noopener">https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvn37878</a></p>
<p>所以结合这些信息，root cause是：受bug CSCvn37878影响下，icmp_based sla在vxlan环境下，sla探针的icmp reply会在copp default queue里计数，而我们看到平常的时候copp-default queue就一直在丢包（说明存在诸如某些tcp/udp过量上到CPU，并且速率超过CoPP设置默认阈值的现象）所以在故障时刻，发出的个sla探针的arp reply在同一秒，这5个icmp reply同时被本端copp default queue drop掉，导致所有SLA瞬时全down，而下一次探测时（frequency == 5s），5个新的SLA探测只要有1个能成功得到相应，就能把大track重新bring up回来</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>1/ 升级到CSCvn37878修复版本解决CoPP异常计数的问题</p>
<p>2/ 增加CoPP default queue阈值，这个其实不建议</p>
<p>3/ 给这个SLA的流量专门定义一个CoPP Queue，避免其他异常流量的干扰</p>
<p>4/ SLA/track re-design，track监控上联到spine的接口状态，如果探测到所有上联接口全down，再shut所有端口自我隔离;</p>
<p>毕竟某一秒发出的5个探针包同时丢了，就整机隔离，也不太符合客户的实际需求。</p>
]]></content>
      <tags>
        <tag>copp</tag>
      </tags>
  </entry>
  <entry>
    <title>vxlan double rmac问题导致丢流不通的问题</title>
    <url>/2020/05/11/vxlan-packet-loss/</url>
    <content><![CDATA[<ul>
<li>涉及的主机名/IP/MAC/端口编号已改</li>
</ul>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>这个故障有点久，故障描述什么的只能大概齐回忆写一下</p>
<p>拓扑：</p>
<p><img src="/images/VxLAN1-1.png" alt="vxlan1-1 topo"></p>
<p>新上环境，两个问题</p>
<p>问题1：两台leaf的show nve peer看不到border-leaf</p>
<p>问题2：PC1 136.6 ping 132.6不通，不同网段</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>1/ 问题1，检查了邻居leaf和border-leaf的邻居是正常建立的，但leaf没有收到border过来的bgp路由，这个是正常现象，因为建立nve peer的前提是需要有peer从远端传来evpn 路由，即通过路由驱动nve peer的建立。随后验证这个就在border上串了一台PC，随后leaf nve peer就可以看到border-leaf</p>
<p>2/ 问题2，leaf-01上查看RIB，指示type-5 evpn路由走默认路由到N9K-05-bl上</p>
<p>3/ 由于测试环境无流量，于是沿途ELAM + SPAN_TO_CPU抓包确定转发路径，发现request方向的ICMP包最终落到最后一跳N9K-05-bl上，然后被丢弃，没有转给PC2，所以丢包点为N9-05-bl</p>
<p>4/ 通过elam detail或者SPAN把detail报文展开，发现N9K-05-bl的内层IP首部中的目的MAC并非N9K-05-bl自己的RMAC(router mac，对于带IP的type 2 evpn路由以及type 5 evpn路由，会携带上rmac，evpn路由传递时，rmac裹在extended community中)</p>
<p>5/ google了下封装错的这个MAC，竟然是个Arista MAC，吃一鲸后继续查</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Ethernet II, Src: d4:c9:<span class="number">3</span>c:xx:xx:xx (d4:c9:<span class="number">3</span>c:xx:xx:xx), Dst: f8:<span class="number">0</span>f:<span class="number">6</span>f:<span class="number">9</span>a:f8:d9 (f8:<span class="number">0</span>f:<span class="number">6</span>f:<span class="number">9</span>a:f8:d9)    &lt;&lt;&lt; 外层L2头部</span><br><span class="line"></span><br><span class="line">Internet Protocol, Src: <span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span> (<span class="number">10.1</span><span class="number">.1</span><span class="number">.3</span>), Dst: <span class="number">10.1</span><span class="number">.1</span><span class="number">.5</span> (<span class="number">10.1</span><span class="number">.1</span><span class="number">.5</span>)                &lt;&lt;&lt; 外层L3头部</span><br><span class="line"></span><br><span class="line">User Datagram Protocol, Src Port: <span class="number">59987</span> (<span class="number">59987</span>), Dst Port: <span class="number">4789</span> (<span class="number">4789</span>)</span><br><span class="line"></span><br><span class="line">Virtual eXtensible Local Area Network</span><br><span class="line"></span><br><span class="line">Ethernet II, Src: d4:c9:<span class="number">3</span>c:xx:xx:xx (d4:c9:<span class="number">3</span>c:xx:xx:xx), Dst: <span class="number">28</span>:<span class="number">99</span>:<span class="number">3</span>a:xx:xx:xx (<span class="number">28</span>:<span class="number">99</span>:<span class="number">3</span>a:xx:xx:xx)   &lt;&lt;&lt; 内层L2头部</span><br><span class="line"></span><br><span class="line">Internet Protocol, Src: <span class="number">10.1</span><span class="number">.136</span><span class="number">.6</span> (<span class="number">10.1</span><span class="number">.136</span><span class="number">.6</span>), Dst: <span class="number">10.1</span><span class="number">.132</span><span class="number">.6</span> (<span class="number">10.1</span><span class="number">.132</span><span class="number">.6</span>)             &lt;&lt;&lt; 内层L3头部</span><br><span class="line"></span><br><span class="line">Internet Control Message Protocol</span><br><span class="line">    Type: <span class="number">8</span> (Echo (ping) request)</span><br></pre></td></tr></table></figure>

<p>6/ 由于解封装点N9K-05-bl收到的包inner dst mac封装错了，自然要回到封装该mac并发出报文的第一跳设备N9K-03-leaf上去看，也是通过SPAN_to_CPU方式看detail 报文，确实在发出报文的时候就封装了错误的inner dst mac</p>
<p>7/ 检查N9K-03-leaf学到的type 5 evpn 0.0路由，携带的rmac有两个，一个是正确的N9K-05-bl的rmac，一个就是错的arista mac，所以球踢回给N9K-05-bl</p>
<p>8/ 检查N9K-05-bl，0.0路由是从ipv4邻居PA学过来的，然后本地将该路由通过type-5 evpn的方式注入自己的VxLAN域中</p>
<p>9/ 检查N9K-05-bl从PA学到的ipv4 0.0路由，extended community中意外携带了Arista rmac，该mac就是上述封装错误的MAC</p>
<p>10/ 为了更好地石锤，flap连PA的入向口的同时，抓该接口rx bgp update，发现PA通告过来的NLRI ipv4 0.0/0中extended community中携带了不该携带的VxLAN属性，即RMAC</p>
<p>所以RCA基本有定论了：<br>N9-05-bl收到的ipv4 0.0路由中携带了VxLAN Arista RMAC，N9K-05-bl在对这样的路由生成type-5 evpn路由的时候直接继承了ipv4路由原有的rmac，所以控制平面，type-5 evpn路由在vxlan域中传递并让N9K-03-leaf收到后，该evpn路由携带了double rmac，这时候N9K-03-leaf的show nve peer毕竟也只会使用一个rmac，就可能选择了错误的arista rmac；在数据平面，N9K-03-leaf封装inner dst mac封装成了错误的rmac，N9K-05-bl解封装发现inner dst mac不是自己的rmac，将包丢弃</p>
<p>后续客户也追踪了下arista mac，说该MAC是PA上游远端遥远的一个Arista VxLAN Domain中的某台设备。其实这条0.0路由就是从Arista VxLAN Domain始发出来的evpn路由，然后穿越ipv4 bgp最后经过N9K-05-bl又重新变成evpn路由在传递</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>和客户解释了，PA传给N9K-05-bl的ipv4路由携带evpn路由的属性是没有意义的，并且PA传给N9K-05-bl的ipv4路由也没有特殊设置diy extended community的需求，所以最终客户也同意在PA做清洗属性的动作，即在PA出向remove all extended community</p>
<p>完结撒花</p>
]]></content>
      <tags>
        <tag>vxlan</tag>
      </tags>
  </entry>
  <entry>
    <title>MTU问题导致ospf卡在EXSTART状态</title>
    <url>/2020/05/11/ospf-stuck-in-exstart/</url>
    <content><![CDATA[<ul>
<li>涉及的主机名/IP/MAC/端口编号已改</li>
</ul>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>客户N9K L2直连Server，并用SVI和Server建ospf，但邻居卡在EXSTART状态</p>
<p>客户Server MTU配置了9292，N9K L2 MTU 1500; SVI MTU 9216</p>
<p>由于LAB能复现，直接说下LAB的情况</p>
<p>拓扑<br>N9K-e1/2(L2)——IXIA                // IXIA模拟Server，设置MTU 9216<br>N9K SVI 100 MTU 9000; e1/2 MTU 1500   // 总之控制Server MTU大于对端N9K SVI100 MTU就行</p>
<h3 id="故障分析"><a href="#故障分析" class="headerlink" title="故障分析"></a>故障分析</h3><p>问题答案如以下RFC文档所述：</p>
<p>If the Interface MTU field in the Database Description packet indicates an IP datagram size that is larger than the router can accept on the receiving interface without fragmentation, the Database Description packet is rejected. </p>
<p>意思是如果本端收到的DBD报文中携带的MTU值，大于本端的MTU，这样的DBD被丢弃，所以一直卡在DBD交互阶段，导致后续OSPF起不来</p>
<p>在N9K侧，可以看到有如下log指示收到的DBD中MTU字段过大</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">That’s why I can see the following log on your N9K</span><br><span class="line"><span class="number">2019</span> Aug  <span class="number">5</span> <span class="number">10</span>:<span class="number">12</span>:<span class="number">06.255029</span> ospf <span class="number">100</span> [<span class="number">25732</span>]: :     DBD <span class="keyword">from</span> <span class="number">10.</span>x.x.x mtu too large &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br></pre></td></tr></table></figure>

<p>以下是LAB的输出，LAB N9K tx DBD携带的MTU为9000，rx DBD携带的MTU为9216，所以最终OSPF就卡在EXSTART上</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>DBD sent <span class="keyword">from</span> N9K, <span class="number">9000</span> <span class="keyword">is</span> inherited by SVI MTU <span class="number">9000</span></span><br><span class="line"></span><br><span class="line">ethanalyzer local interface inband display-filter <span class="string">"ospf and ip.addr==10.1.1.1"</span> detail</span><br><span class="line">…snip…</span><br><span class="line">OSPF DB Description</span><br><span class="line">        Interface MTU: <span class="number">9000</span></span><br><span class="line">        Options: <span class="number">0x42</span> (O, E)</span><br><span class="line">            <span class="number">0.</span>.. .... = DN: DN-bit <span class="keyword">is</span> NOT set</span><br><span class="line">            <span class="number">.1</span>.. .... = O: O-bit <span class="keyword">is</span> SET</span><br><span class="line">            .<span class="number">.0</span>. .... = DC: Demand circuits are NOT supported</span><br><span class="line">            ..<span class="number">.0</span> .... = L: The packet does NOT contain LLS data block</span><br><span class="line">            .... <span class="number">0.</span>.. = NP: Nssa <span class="keyword">is</span> NOT supported</span><br><span class="line">            .... <span class="number">.0</span>.. = MC: NOT multicast capable</span><br><span class="line">            .... .<span class="number">.1</span>. = E: ExternalRoutingCapability</span><br><span class="line">        DB Description: <span class="number">0x07</span> (I, M, MS)</span><br><span class="line">            .... <span class="number">0.</span>.. = R: OOBResync bit <span class="keyword">is</span> NOT set</span><br><span class="line">            .... <span class="number">.1</span>.. = I: Init bit <span class="keyword">is</span> SET</span><br><span class="line">            .... .<span class="number">.1</span>. = M: More bit <span class="keyword">is</span> SET</span><br><span class="line">            .... ..<span class="number">.1</span> = MS: Master/Slave bit <span class="keyword">is</span> SET</span><br><span class="line">        DD Sequence: <span class="number">265289436</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>DBD sent <span class="keyword">from</span> IXIA, MTU <span class="keyword">is</span> set <span class="keyword">with</span> MTU <span class="number">9216</span>, which <span class="keyword">is</span> greater than MTU <span class="number">9000</span> sent <span class="keyword">from</span> N9K</span><br><span class="line"></span><br><span class="line">ethanalyzer local interface inband display-filter <span class="string">"ospf and ip.addr==10.1.1.2"</span> detail</span><br><span class="line">…snip…</span><br><span class="line">OSPF DB Description</span><br><span class="line">        Interface MTU: <span class="number">9216</span></span><br><span class="line">        Options: <span class="number">0x02</span> (E)</span><br><span class="line">            <span class="number">0.</span>.. .... = DN: DN-bit <span class="keyword">is</span> NOT set</span><br><span class="line">            <span class="number">.0</span>.. .... = O: O-bit <span class="keyword">is</span> NOT set</span><br><span class="line">            .<span class="number">.0</span>. .... = DC: Demand circuits are NOT supported</span><br><span class="line">            ..<span class="number">.0</span> .... = L: The packet does NOT contain LLS data block</span><br><span class="line">            .... <span class="number">0.</span>.. = NP: Nssa <span class="keyword">is</span> NOT supported</span><br><span class="line">            .... <span class="number">.0</span>.. = MC: NOT multicast capable</span><br><span class="line">           .... .<span class="number">.1</span>. = E: ExternalRoutingCapability</span><br><span class="line">        DB Description: <span class="number">0x07</span> (I, M, MS)</span><br><span class="line">            .... <span class="number">0.</span>.. = R: OOBResync bit <span class="keyword">is</span> NOT set</span><br><span class="line">            .... <span class="number">.1</span>.. = I: Init bit <span class="keyword">is</span> SET</span><br><span class="line">            .... .<span class="number">.1</span>. = M: More bit <span class="keyword">is</span> SET</span><br><span class="line">            .... ..<span class="number">.1</span> = MS: Master/Slave bit <span class="keyword">is</span> SET</span><br><span class="line">        DD Sequence: <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Then OSPF neighbor stuck <span class="keyword">in</span> EXSTART</span><br><span class="line"></span><br><span class="line">sh ip os  neighbors</span><br><span class="line"> OSPF Process ID <span class="number">1</span> VRF default</span><br><span class="line">Total number of neighbors: <span class="number">1</span></span><br><span class="line">Neighbor ID     Pri State            Up Time  Address         Interface</span><br><span class="line"><span class="number">192.0</span><span class="number">.0</span><span class="number">.1</span>         <span class="number">0</span> EXSTART/DROTHER  <span class="number">00</span>:<span class="number">09</span>:<span class="number">56</span> <span class="number">10.1</span><span class="number">.1</span><span class="number">.2</span>        Vlan10</span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>ospf</tag>
      </tags>
  </entry>
  <entry>
    <title>一个静态路由引起的环路问题</title>
    <url>/2020/11/07/%E8%AE%B0%E4%B8%80%E4%B8%AA%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%BC%95%E8%B5%B7%E7%9A%84%E7%8E%AF%E8%B7%AF%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="/images/isis-bgp-loop.png" alt="isis-bgp-loop topo"></p>
<p>先介绍下大体背景</p>
<p>VxLAN环境，ssp01a和ssp01b为spine并是RR, leaf01a和leaf02a为leaf，并跑vPC，leaf01a为vPC secondary</p>
<p>两台leaf上配置了出口静态缺省路由(红色箭头，两台leaf通过0.0/32去往8.8)静态路由关联的是接口VLAN1350，如下:</p>
<p>vrf context test<br>  ip route 0.0.0.0/0 172.x.x.103    // 172.x.x.103印象是VLAN1350所在直连网段的一个NH</p>
<p>随后leaf上两个动作</p>
<ul>
<li>将静态路由0.0/0通告到bgp evpn中</li>
<li>将直连路由vlan1350通告到bgp evpn中</li>
</ul>
<p>随后leaf002</p>
<p>客户做vPC切换(shut leaf01a peer-link)后，ssp下游的主机ping远端8.8完全不通</p>
<p>分析：</p>
<p>1/ 查这个故障时，故障状态下从ping源开始逐跳ELAM + show forwarding route xxx vrf xxx + show lldp neighbor确认实际转发路径，发现icmp request流量在leaf01a e1/49和ssp01a e1/9互联的链路上打环</p>
<p>2/ 切换前leaf01a的RIB入下，去往8.8的路由为本地配置的静态路由，递归到vlan1350 am直连出口</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">leaf01a(config-<span class="keyword">if</span>-range)<span class="comment"># sh ip route 8.8.8.8 vrf test</span></span><br><span class="line">IP Route Table <span class="keyword">for</span> VRF <span class="string">"l3testing"</span></span><br><span class="line"><span class="string">'*'</span> denotes best ucast next-hop</span><br><span class="line"><span class="string">'**'</span> denotes best mcast next-hop</span><br><span class="line"><span class="string">'[x/y]'</span> denotes [preference/metric]</span><br><span class="line"><span class="string">'%&lt;string&gt;'</span> <span class="keyword">in</span> via output denotes VRF &lt;string&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span>, ubest/mbest: <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">    *via <span class="number">172.</span>xx.xx<span class="number">.103</span>, [<span class="number">1</span>/<span class="number">0</span>], <span class="number">00</span>:<span class="number">02</span>:<span class="number">09</span>, static</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">leaf01a(config-<span class="keyword">if</span>-range)<span class="comment"># sh ip route 172.xx.xx.103 vrf test</span></span><br><span class="line">IP Route Table <span class="keyword">for</span> VRF <span class="string">"l3testing"</span></span><br><span class="line"><span class="string">'*'</span> denotes best ucast next-hop</span><br><span class="line"><span class="string">'**'</span> denotes best mcast next-hop</span><br><span class="line"><span class="string">'[x/y]'</span> denotes [preference/metric]</span><br><span class="line"><span class="string">'%&lt;string&gt;'</span> <span class="keyword">in</span> via output denotes VRF &lt;string&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">172.</span>xx.xx<span class="number">.103</span>/<span class="number">32</span>, ubest/mbest: <span class="number">1</span>/<span class="number">0</span>, attached</span><br><span class="line">    *via <span class="number">172.</span>xx.xx<span class="number">.103</span>, Vlan1350, [<span class="number">250</span>/<span class="number">0</span>], <span class="number">00</span>:<span class="number">02</span>:<span class="number">17</span>, am                 &lt;&lt;&lt; oif <span class="keyword">is</span> vlan1350</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>/ shut peer-link后，由于keep-alive没动依然是up，leaf01a作为vPC secondary，将自己的vPC member port和SVI如SVI1350口状态置位suspend down</span><br><span class="line"></span><br><span class="line">此时看下leaf01a的RIB，发现缺省路由依然是up的，up的原因也很简单，配置的静态路由只关联了下一跳，只要该下一跳地址我路由可达，就可以让静态路由up</span><br><span class="line"></span><br><span class="line">IP Route Table <span class="keyword">for</span> VRF <span class="string">"test"</span></span><br><span class="line"><span class="string">'*'</span> denotes best ucast next-hop</span><br><span class="line"><span class="string">'**'</span> denotes best mcast next-hop</span><br><span class="line"><span class="string">'[x/y]'</span> denotes [preference/metric]</span><br><span class="line"><span class="string">'%&lt;string&gt;'</span> <span class="keyword">in</span> via output denotes VRF &lt;string&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span>, ubest/mbest: <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">    *via <span class="number">172.</span>xx.xx<span class="number">.103</span>, [<span class="number">1</span>/<span class="number">0</span>], <span class="number">00</span>:<span class="number">37</span>:<span class="number">19</span>, static</span><br><span class="line"></span><br><span class="line">leaf01a(config)<span class="comment"># sh ip route 172.xx.xx.103 vrf test</span></span><br><span class="line">IP Route Table <span class="keyword">for</span> VRF <span class="string">"test"</span></span><br><span class="line"><span class="string">'*'</span> denotes best ucast next-hop</span><br><span class="line"><span class="string">'**'</span> denotes best mcast next-hop</span><br><span class="line"><span class="string">'[x/y]'</span> denotes [preference/metric]</span><br><span class="line"><span class="string">'%&lt;string&gt;'</span> <span class="keyword">in</span> via output denotes VRF &lt;string&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">172.</span>xx.x<span class="number">.96</span>/<span class="number">28</span>, ubest/mbest: <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">    *via <span class="number">172.</span>xx.xx<span class="number">.54</span>, [<span class="number">200</span>/<span class="number">0</span>], <span class="number">00</span>:<span class="number">34</span>:<span class="number">36</span>, bgp<span class="number">-64603</span>, internal, tag <span class="number">64603</span></span><br><span class="line"></span><br><span class="line">leaf01a(config)<span class="comment"># sh ip route 172.xx.xx.54 vrf l3testing</span></span><br><span class="line">IP Route Table <span class="keyword">for</span> VRF <span class="string">"l3testing"</span></span><br><span class="line"><span class="string">'*'</span> denotes best ucast next-hop</span><br><span class="line"><span class="string">'**'</span> denotes best mcast next-hop</span><br><span class="line"><span class="string">'[x/y]'</span> denotes [preference/metric]</span><br><span class="line"><span class="string">'%&lt;string&gt;'</span> <span class="keyword">in</span> via output denotes VRF &lt;string&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">172.</span>xx.xx<span class="number">.54</span>/<span class="number">32</span>, ubest/mbest: <span class="number">2</span>/<span class="number">0</span></span><br><span class="line">    *via <span class="number">172.</span>xx<span class="number">.40</span><span class="number">.1</span>, Eth1/<span class="number">49</span>, [<span class="number">115</span>/<span class="number">3</span>], <span class="number">3</span>d22h, isis<span class="number">-10</span>, L1	&lt;&lt;&lt; 去往<span class="number">8.8</span>的包可能从e1/<span class="number">49</span>发出</span><br><span class="line">	*via <span class="number">172.</span>xx<span class="number">.40</span><span class="number">.2</span>, Eth1/<span class="number">50</span>, [<span class="number">115</span>/<span class="number">3</span>], <span class="number">3</span>d22h, isis<span class="number">-10</span>, L1</span><br></pre></td></tr></table></figure>

<p>对0.0/32下一跳地址查路由，可以看到递归到最后是172.xx.xx.54/32(leaf02a loopback)的isis ecmp路由,两个出口分别是40.1(leaf01a连接ssp01a的接口)，40.2(leaf01a连接ssp01a的接口)</p>
<p>所以现在配置的默认路由依然能up是因为默认路由关联的下一跳是可达的，于是这条静态默认路由也会被重分布到bgp中</p>
<p>再来看spine ssp01a的RIB，去往8.8的路由是一条bgp 0.0路由，0.0路由就是分别从leaf01a和leaf02a重分布得到的，由选路规则leaf01a RouterID更小，所以优选leaf01a学来的路由</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">IP Route Table <span class="keyword">for</span> VRF <span class="string">"test"</span></span><br><span class="line"><span class="string">'*'</span> denotes best ucast next-hop</span><br><span class="line"><span class="string">'**'</span> denotes best mcast next-hop</span><br><span class="line"><span class="string">'[x/y]'</span> denotes [preference/metric]</span><br><span class="line"><span class="string">'%&lt;string&gt;'</span> <span class="keyword">in</span> via output denotes VRF &lt;string&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span>, ubest/mbest: <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">    *via <span class="number">172.</span>x.xx<span class="number">.53</span>, [<span class="number">200</span>/<span class="number">0</span>], <span class="number">3</span>d22h, bgp<span class="number">-64603</span>, internal, tag <span class="number">64603</span></span><br><span class="line"></span><br><span class="line">对下一条递归下，最终走的是e1/<span class="number">9</span></span><br><span class="line"></span><br><span class="line">ssp01a<span class="comment"># sh ip route 172.24.xx.53 vrf test</span></span><br><span class="line">IP Route Table <span class="keyword">for</span> VRF <span class="string">"l3testing"</span></span><br><span class="line"><span class="string">'*'</span> denotes best ucast next-hop</span><br><span class="line"><span class="string">'**'</span> denotes best mcast next-hop</span><br><span class="line"><span class="string">'[x/y]'</span> denotes [preference/metric]</span><br><span class="line"><span class="string">'%&lt;string&gt;'</span> <span class="keyword">in</span> via output denotes VRF &lt;string&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">172.</span>x.x<span class="number">.53</span>/<span class="number">32</span>, ubest/mbest: <span class="number">1</span>/<span class="number">0</span></span><br><span class="line">    *via <span class="number">172.</span>xx.xx<span class="number">.53</span>, Eth1/<span class="number">9</span>, [<span class="number">115</span>/<span class="number">2</span>], <span class="number">3</span>d22h, isis<span class="number">-10</span>, L1</span><br><span class="line">     via <span class="number">172.</span>xx.xx<span class="number">.53</span>, Eth1/<span class="number">9</span>, [<span class="number">250</span>/<span class="number">0</span>], <span class="number">3</span>d22h, am</span><br></pre></td></tr></table></figure>

<p>所以从leaf01a和ssp01a的路由表就能看到数据包在这条直连链路打环</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>leaf01a和leaf02a的静态路由0.0/0写的时候带上出接口VLAN1350，这样在peer-link down，使得leaf01a VLAN1350 suspend down后，leaf01a静态路由0.0/0直接自动失效，leaf01a 重分布0.0/0的动作也失效，这样ssp01a仅会收到从leaf02a重分布过来的0.0/0路由，并且指向leaf02a</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">vrf context test</span><br><span class="line">  ip route <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">0</span> Vlan1350 <span class="number">172.</span>xx.xx<span class="number">.103</span></span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>peer-gateway作用下，eigrp/ospf邻居翻动</title>
    <url>/2020/11/15/peer-gateway%E4%BD%9C%E7%94%A8%E4%B8%8B%EF%BC%8Ceigrp-ospf%E9%82%BB%E5%B1%85%E7%BF%BB%E5%8A%A8/</url>
    <content><![CDATA[<p>涉及的IP已改</p>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="/images/peer-router-1-1.png" alt="peer-router-1-1 topo"></p>
<p>eigrp/ospf都可能遇到这个问题，原理一样，下面以eigrp举例说明</p>
<p>N9K-1和N9K-2跑vPC，C3900双上联到两台N9K，C3900通过SVI213和N9K-1 SVI213建EIGRP邻居后，邻居持续flapping</p>
<h3 id="故障分析"><a href="#故障分析" class="headerlink" title="故障分析"></a>故障分析</h3><p>N9K上的vPC配置，其中配置了peer-gateway</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">vpc domain <span class="number">1</span></span><br><span class="line">  peer-switch</span><br><span class="line">  peer-keepalive destination <span class="number">10.1</span><span class="number">.1</span><span class="number">.1</span> source <span class="number">10.1</span><span class="number">.1</span><span class="number">.2</span> vrf vpcpeerkeepalive</span><br><span class="line">  peer-gateway                        &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; </span><br><span class="line">  auto-recovery</span><br></pre></td></tr></table></figure>

<p>分析flap原因，既然是flap，肯定邻居能up然后down的。假设此时邻居刚刚up，此时需要同步路由信息，假设C3900发出eigrp update报文，这里需注意update报文是单播，并且TTL==1 &amp; DST_MAC==N9K-1_SVI213_MAC<br>假设该报文hash到了po10右侧成员口，N9K-2收到update后，N9K-2查询DST_MAC, 发现是N9K-1的SVI MAC，并且N9K-2是配置了peer-gateway的，所以N9K-1 SVI MAC在本地mac addres-table中标记为G，对于这样的MAC，N9K-2会“代理”处理这个报文，于是继续查三层头并查询DST_IP做一次路由处理，结果自然是TTL-1 = 0从而update报文失效。</p>
<p>如果没有peer-gateway特性，N9K-2收到这个update，N9K-2查询DST_MAC后发现出口为peer-link并且由于表项也没有G标识，就直接将update包透传给N9K-1，所以TTL到达N9K-1时依然==1，也就能被N9K-1正确处理</p>
<p>关于peer-gateway的解释，如下：<br>Packets that arrive at the peer-gateway vPC device have their Time to Live (TTL) decremented, so that packets carrying a TTL of 1 might get dropped in transit due to TTL expiration. You should take this situation into account when the peer-gateway feature is enabled and particular network protocols that source packets with a TTL of 1 operate on a vPC VLAN.</p>
<p>分别在N9K-1和N9K-2上ethanalyzer抓包更为直观</p>
<p>N9K-1<br><img src="/images/peer-router-1-2.png" alt="peer-router-1-2 topo"></p>
<p>N9K-1上只能看到N9K-1向C3900发的update，但是N9K-2没有回复UPDATE ACK</p>
<p>N9K-2<br><img src="/images/peer-router-1-3.png" alt="peer-router-1-3 topo"></p>
<p>N9K-1上没收到的UPDATE ACK都能在N9K-2上抓到，即这些包都被N9K-2丢了</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>workaround是配置’peer-router’，配置后，该场景下TTL不会减1</p>
]]></content>
  </entry>
  <entry>
    <title>ospf/eigrp flap caused by peer-gateway</title>
    <url>/2020/11/06/ospf-eigrp-flap-caused-by-peer-gateway/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>记一个组播不通问题</title>
    <url>/2020/11/22/%E8%AE%B0%E4%B8%80%E4%B8%AA%E7%BB%84%E6%92%AD%E4%B8%8D%E9%80%9A%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="/images/multicast1-1.png" alt="multicast1-1 topo"></p>
<ul>
<li>N9K-1 N9K-2 N3K-1 N3K-2跑double-side vPC</li>
<li>组播源10.x.35.105在vlan301并挂在C3K-1上，组播接收者10.x.36.44在vlan302并挂在C3K-2上，vlan301与vlan302网关均在两台N9K上</li>
<li>组播环境是SSM+igmpv3</li>
</ul>
<p>问题就是组播接收者收不到组播流量</p>
<h3 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h3><p>1/ 首先询问客户使用的组播地址，告知是用的是224.0.0.21的地址，IANA规定了224.0.0.0 - 224.0.0.255 (224.0.0/24)是保留地址且是local无法被跨网段路由的，所以需要先更正组播地址</p>
<p>2/ 改成239.1.x.135后，组播还是不通，在两台N9K上ethanalyzer以及检查igmp group，发现没有收到s2发来的igmp report，随后证实下游N3K在收到igmp report后没往上发给N9K，这是因为N3K没有收到N9K的query</p>
<p>检查配置后发现2台N9K以及2台N3K虽然都配置了querier ip，都是一样的ip 10.x.x.200，根据如下RFC 2236中描述了Querier的选举规则，取网段内IP最小的地址为实际的querier，所以客户的配置下无法保证N9K成为实际的querier</p>
<p>If a multicast router hears a<br>   Query message from a router with a lower IP address, it MUST become a<br>   Non-Querier on that network.</p>
<p><a href="https://tools.ietf.org/html/rfc2236" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc2236</a></p>
<p>这个问题在LAB测试得出两种workaround,建议使用第一种</p>
<ul>
<li>N9K上配置较小的querier ip，使之成为子网中实际的Querier</li>
<li>两台N3K vlan 1302关闭 igmp snooping，直接泛洪igmp report报文</li>
</ul>
<p>3/ querier改完后，但组播还是不通，N9K上再次检查igmp group，发现依然看不到igmp report，但此时N9K上ethanalyzer已经能看到CPU实际上有收到下游的igmp join（ethanalyzer结果至少说明第二步中定位的igmp querier问题是fix了）</p>
<p>所以现在的问题转变成为什么收到了下游的report但不加表。把igmp report报文摘出来后发现虽然是igmpv3，但source是0.0.0.0即Any source，这和N9K使用的组播模式SSM(specific source multicast)相悖了。</p>
<p>把这种特殊报文到LAB里重放后，发现可以重现，行为如下：</p>
<p>运行SSM模式的N9K收到Any source的IGMPv3不装IGMP group表，当收到Specific source的IGMPv3才会装IGMP group表，如下是分别收到带源igmpv3和不带源igmpv3的N9K debug处理行为，可以看到当N9K收到any source(*,G)的igmp report时，显示not allowed，而如果收到(S,G)的igmp report时，能正常创建表项</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N9K_3(config)<span class="comment"># sh ip igmp internal event-history events</span></span><br><span class="line"></span><br><span class="line">events events <span class="keyword">for</span> IGMP process</span><br><span class="line"><span class="number">2020</span> Oct <span class="number">16</span> <span class="number">07</span>:<span class="number">32</span>:<span class="number">32.118424</span> igmp [<span class="number">30105</span>]: : (*,G) reports <span class="keyword">not</span> allowed <span class="keyword">for</span> SSM groups            &lt;&lt;&lt; 收到不带源的IGMP</span><br><span class="line"><span class="number">2020</span> Oct <span class="number">16</span> <span class="number">07</span>:<span class="number">31</span>:<span class="number">43.412147</span> igmp [<span class="number">30105</span>]: : igmp_receive_report:Entry created : Triggering igmp_mrib_schedule_update(ADD) <span class="keyword">for</span> (<span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>, <span class="number">239.0</span><span class="number">.0</span><span class="number">.21</span>) oif: Vlan1302         &lt;&lt;&lt; 收到带源的IGMP</span><br></pre></td></tr></table></figure>

<p>SSM的原理是LHR收到IGMP report，假设report中是(source 10.1.1.1, MS 239.0.0.21)，LHR会根据单播路由表朝着source 10.1.1.1的方向发生PIM (S,G)Join，创建源树，我理解如果report中没有source ip的话，是没办法和源创建源树的。</p>
<p>对应2个解决方法</p>
<ul>
<li>服务器IGMPv3配置上特定源</li>
<li>如果服务器设置不了，就使用ASM(Any source multicast)模式，需要额外配置RP</li>
</ul>
<p>由于客户接收组播流量的终端无法指定igmpv3特定源，于是改成了ASM模式，改完后igmp group表终于能看到下游的igmp report了，mrib中的（S,G）也有了出接口，最后客户在接收者tcpdump抓了包，也确定能抓到组播流量了。</p>
<p>完结撒花！</p>
]]></content>
  </entry>
  <entry>
    <title>路由软硬件不一致产生延时丢包问题</title>
    <url>/2020/12/01/%E8%B7%AF%E7%94%B1%E8%BD%AF%E7%A1%AC%E4%BB%B6%E4%B8%8D%E4%B8%80%E8%87%B4%E4%BA%A7%E7%94%9F%E5%BB%B6%E6%97%B6%E4%B8%A2%E5%8C%85%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="/images/lpm-1-1.png" alt="lpm-1-1 topo"></p>
<ul>
<li>部分VLAN如VLAN 116下的PC(10.11.116.7)访问外网Server(10.1.6.155)时延时大，并有10%左右的丢包</li>
<li>VLAN116的网关在两台做vPC的N3K上，2960双上联到两台N3K</li>
<li>ASA-A为主墙，ASA-B为备墙</li>
<li>客户在N3K-A上联口下联口同时抓包，发现N3K-A向上发出icmp request到收到icmp reply时间差很短，但对比N3K-A从收到icmp reply到将该reply发送到下联口的时间差较大，故初步判断延时是由N3K-A产生，客户shutdown N3K-A SVI116，故障恢复</li>
</ul>
<h3 id="排查过程"><a href="#排查过程" class="headerlink" title="排查过程"></a>排查过程</h3><p>1/ 丢包期间N3K-A上copp上的class-map copp-s-l3destmiss丢包计数不断增长</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span>st</span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">l3destmiss</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 100 </span></span><br><span class="line"><span class="class">        <span class="title">OutPackets</span>    34435805</span></span><br><span class="line"><span class="class">        <span class="title">DropPackets</span>   848325		&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">2<span class="title">nd</span></span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">l3destmiss</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 100 </span></span><br><span class="line"><span class="class">        <span class="title">OutPackets</span>    42958127</span></span><br><span class="line"><span class="class">        <span class="title">DropPackets</span>   868428		&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></span><br></pre></td></tr></table></figure>

<p>copp-s-l3destmiss含义如下</p>
<p>Layer 3 traffic with a miss for the lookup in the hardware Layer 3 forwarding table.</p>
<p>简单展开下，数据包到交换机后，L2查完若需要路由，在L3硬件表项中查询L3 dst ip，如果L3硬件表项中查不到，就会上到CPU进行软件处理，上CPU的流量都会被copp分类 &amp; 限速，L3硬件表项中查不到的这类流量就在copp-s-l3destmiss中计数，此时该class-map的DropPackets会不断增长，而当这样的实时流量超出系统为该class-map设置的阈值pps 100后，超出部分被丢弃，计在DropPackets中；所以基于此，可能是reply回包进入N3K-A，该数据包在硬件层面没有路由能匹配到它，于是回包都上CPU了。</p>
<p>2/ 先检查两台N3K syslog，发现如下异常log：</p>
<p>2019 May 10 14:26:12 N3K-A %$ VDC-1 %$ %IPFIB-2-FIB_TCAM_RESOURCE_EXHAUSTION_LPM_IPV4: FIB TCAM exhausted for IPV4 routes in LPM table</p>
<p>该log表示LPM路由(longest prefix match)的硬件资源耗尽,非主机路由或者说是非/32位的路由都属于LPM路由</p>
<p>3/ 检查N3K-A的硬件表项使用可以发现硬件LPM路由空间基本已经耗尽</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N3K-A# show<span class="built_in"> hardware profile </span>status </span><br><span class="line"> </span><br><span class="line">slot  1</span><br><span class="line">=======</span><br><span class="line"> </span><br><span class="line">Total LPM Entries = 7679. 			&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br><span class="line">Total Host Entries = 16384. </span><br><span class="line">Reserved LPM Entries = 1024. </span><br><span class="line">Max Host4/Host6 Limit Entries (shared)=  8192/4096* </span><br><span class="line">Max Mcast Limit Entries = 4096. </span><br><span class="line">Max<span class="built_in"> IPv6 </span>Mcast Limit Entries = 2048. </span><br><span class="line">Max Ucast<span class="built_in"> IPv6 </span>LPM Limit Entries = 2048. </span><br><span class="line">Max Ucast<span class="built_in"> IPv6 </span>LPM_65_to_127 Limit Entries = 128. </span><br><span class="line">Used LPM Entries (Total) = 7676. 	&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span><br></pre></td></tr></table></figure>

<p>由于N3K vlan116是/24为的，所以也是LPM路由，怀疑该路由没被硬件编程到LPM Table中</p>
<p>4/ 检查两台N3K LPM路由的硬件编程情况，由于vlan116当时故障时没有相关信息没有记录到，这里以另一个路由举例，vrf test中的LPM路由10.128.4.0/22有较大延时</p>
<p>先取vrf test的id，得到id为36，结合如下命令可以看到10.128.4.0/22没有在id为36的vrf中编程</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N3K-A(config)<span class="comment"># show vrf all</span></span><br><span class="line">VRF-Name                           VRF-ID State   Reason                        </span><br><span class="line">...snip...                         </span><br><span class="line">test                           		   <span class="number">36</span> Up      --   		&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;                         </span><br><span class="line">KeepAlive-Link                         <span class="number">37</span> Up      --                            </span><br><span class="line">default                                 <span class="number">1</span> Up      --                            </span><br><span class="line">management                              <span class="number">2</span> Up      --</span><br></pre></td></tr></table></figure>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N3K-A(config)<span class="comment"># bcm-shell module 1 "l3 defip show" | in 10.12.14.0/22</span></span><br><span class="line"><span class="comment">#     VRF     Net addr             Next Hop Mac        INTF MODID PORT PRIO CLASS HIT VLAN</span></span><br><span class="line"><span class="number">3488</span>  <span class="number">3</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100061</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3490</span>  <span class="number">28</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100084</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3494</span>  <span class="number">21</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100062</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3499</span>  <span class="number">15</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100074</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3500</span>  <span class="number">10</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100085</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3501</span>  <span class="number">1</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">200002</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y      (ECMP)</span><br><span class="line"><span class="number">3502</span>  <span class="number">8</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100053</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3502</span>  <span class="number">22</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100089</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3504</span>  <span class="number">14</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100077</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3505</span>  <span class="number">16</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100093</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3506</span>  <span class="number">26</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100056</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3507</span>  <span class="number">13</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100042</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3507</span>  <span class="number">19</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100070</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3510</span>  <span class="number">29</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100041</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3514</span>  <span class="number">18</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100068</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3517</span>  <span class="number">30</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100048</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3518</span>  <span class="number">23</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100055</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3519</span>  <span class="number">24</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100037</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3520</span>  <span class="number">9</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100060</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3523</span>  <span class="number">11</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100082</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3526</span>  <span class="number">17</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100069</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3529</span>  <span class="number">4</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100066</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3533</span>  <span class="number">33</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100072</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3536</span>  <span class="number">5</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100087</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3540</span>  <span class="number">12</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100054</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3542</span>  <span class="number">27</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100039</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3546</span>  <span class="number">35</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100075</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3547</span>  <span class="number">6</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100064</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3550</span>  <span class="number">34</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100080</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3555</span>  <span class="number">7</span>        <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100058</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3557</span>  <span class="number">20</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100059</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3558</span>  <span class="number">25</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100052</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3564</span>  <span class="number">31</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100047</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3565</span>  <span class="number">32</span>       <span class="number">10.12</span><span class="number">.14</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100091</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br></pre></td></tr></table></figure>

<blockquote>
<blockquote>
<blockquote>
<p>随后检查该路由在N3K-A的id为36(vrf test)有在硬件中编程</p>
</blockquote>
</blockquote>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N3K-B<span class="comment"># bcm-shell module 1 "l3 defip show" | in 10.128.4.0/22</span></span><br><span class="line"><span class="number">3495</span>  <span class="number">11</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100057</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3496</span>  <span class="number">15</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100060</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3497</span>  <span class="number">25</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100095</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3498</span>  <span class="number">7</span>        <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100104</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3500</span>  <span class="number">24</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100066</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3502</span>  <span class="number">19</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100091</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3505</span>  <span class="number">23</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100107</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3507</span>  <span class="number">21</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100102</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3510</span>  <span class="number">30</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100094</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3512</span>  <span class="number">35</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100064</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3515</span>  <span class="number">33</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100043</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3517</span>  <span class="number">34</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100054</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3523</span>  <span class="number">10</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100063</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3525</span>  <span class="number">18</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100101</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3527</span>  <span class="number">26</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100099</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3530</span>  <span class="number">32</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100096</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3532</span>  <span class="number">27</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100087</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3540</span>  <span class="number">8</span>        <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100062</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3542</span>  <span class="number">16</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100051</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3545</span>  <span class="number">28</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100039</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3547</span>  <span class="number">29</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100055</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> n</span><br><span class="line"><span class="number">3550</span>  <span class="number">17</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100093</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3552</span>  <span class="number">31</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100058</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3554</span>  <span class="number">20</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100098</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3555</span>  <span class="number">14</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100067</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3556</span>  <span class="number">12</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100045</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3559</span>  <span class="number">36</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100103</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y   &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; lpm route <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span> <span class="keyword">in</span> vrf test get programmed</span><br><span class="line"><span class="number">3562</span>  <span class="number">9</span>        <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100041</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3567</span>  <span class="number">22</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100053</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3570</span>  <span class="number">13</span>       <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100100</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3575</span>  <span class="number">1</span>        <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">200002</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y      (ECMP)</span><br><span class="line"><span class="number">3575</span>  <span class="number">3</span>        <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100097</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3576</span>  <span class="number">4</span>        <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100047</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br><span class="line"><span class="number">3576</span>  <span class="number">6</span>        <span class="number">10.128</span><span class="number">.4</span><span class="number">.0</span>/<span class="number">22</span>        <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="number">100049</span>    <span class="number">0</span>     <span class="number">0</span>     <span class="number">0</span>    <span class="number">0</span> y</span><br></pre></td></tr></table></figure>

<p>把信息全串联起来，结论如下：</p>
<p>1）LPM Table耗尽说明软件层面学习到的LPM路由数量大于硬件层面LPM table的最大承载容量<br>2）LPM table中无法被硬件编程的LPM路由从LPM Table中溢出，这里假设溢出的是SVI 116所在的LPM路由10.11.116.0/24，此时10.1.116.0/24仅在software层面进行存储； 而另一端的N3K-B把SVI 116的路由正确地存储于其硬件LPM表中。<br>3）后续当N3K-A从上联ASA-A收到hit路由10.11.116.0/24的数据包时，N3K-1先查询硬件LPM table，发现没有对应Entry，于是上到CPU进行处理<br>4）通常数据包意外上到CPU处理会带来高延时现象，因为软件层面的处理相对于硬件处理来说是很慢的，所以我们实际中也有看到这么个现象：N3K-A发出从VLAN116 PC过来的ICMP Request以及从ASA-A收到ICMP Reply是在相当短的时间内完成的，但N3K-A却用了相当长的时间把ICMP Reply回响给PC(因为此时的ICMP Reply hit的是未被硬件编程的LPM路由SVI116 10.11.116.0/24)，所以在PC上看ping的延时很大。<br>5）当延时过高时，就会带来丢包现象，所以当时故障现象中大约看到了10%的丢包</p>
<p>执行workaround ‘shutdown N3K-A SVI 116’后，为何能恢复？</p>
<p>6）shutdown N3K-1 SVI 116，带来的结果是：N3K-1抑制了EIGRP将SVI 116路由信息通告给上联ASA-A，也就是ASA-A关于去往SVI 116网络的路由下一跳从N3K-A的SVI 116变成了N3K-B的SVI 116。<br>7) 基于上述结果，当shut N3K-A SVI 116后，N3K-A从ASA-A收到的ARP Reply中，目的MAC为N3K-B SVI 116（上联Po41是二层口）<br>8）数据包到达N3K-A后，做二层透传，基于N3K-B SVI 116 MAC查MAC地址表，将数据包发给N3K-B，N3K-B收到数据包，由于目的MAC是自己，所以基于硬件LPM Table做三层转发（此时N3K-B上SVI 116所在路由正确编程在硬件LPM Table中），所以这里的三层转发耗时很短，随后基于本端的ARP Table将目的MAC重写为PC MAC，并发给下联接入，所以这个过程中PC的ping包延时正常。</p>
<p>基于上述分析的建议</p>
<ul>
<li>对路由进行Summary汇总，从而释放一些LPM Table的存储空间。</li>
<li>system urpf disable，扩容一倍LPM空间</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>snmp oid使用示例</title>
    <url>/2020/12/10/snmp-oid%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h3 id="假设获取e1-27收发光"><a href="#假设获取e1-27收发光" class="headerlink" title="假设获取e1/27收发光"></a>假设获取e1/27收发光</h3><p>涉及的oid</p>
<p>Object    entPhysicalName<br>OID    1.3.6.1.2.1.47.1.1.1.1.7</p>
<p>Object    entSensorValue<br>OID    1.3.6.1.4.1.9.9.91.1.1.1.1.4</p>
<p>Here’s an example to show you how to get SFP rx/tx power</p>
<p>Step1: find the index of e1/27 / RX power / TX power</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ ./snmpwalk.exe -v <span class="number">2</span>c -c cisco <span class="number">10.75</span><span class="number">.61</span><span class="number">.21</span> mib<span class="number">-2.47</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.7</span></span><br><span class="line"> </span><br><span class="line">SNMPv2-SMI::mib<span class="number">-2.47</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.7</span><span class="number">.48860</span> = STRING: <span class="string">"Transceiver(slot:1-port:7)"</span>                                                                                    &lt;&lt;&lt;        <span class="number">48860</span> represent e1/<span class="number">27</span></span><br><span class="line">…snip…</span><br><span class="line">SNMPv2-SMI::mib<span class="number">-2.47</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.7</span><span class="number">.300045763</span> = STRING: <span class="string">"Ethernet1/27 Lane 1 Transceiver Voltage Sensor"</span></span><br><span class="line">SNMPv2-SMI::mib<span class="number">-2.47</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.7</span><span class="number">.300045764</span> = STRING: <span class="string">"Ethernet1/27 Lane 1 Transceiver Bias Current Sensor"</span></span><br><span class="line">SNMPv2-SMI::mib<span class="number">-2.47</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.7</span><span class="number">.300045767</span> = STRING: <span class="string">"Ethernet1/27 Lane 1 Transceiver Temperature Sensor"</span></span><br><span class="line">SNMPv2-SMI::mib<span class="number">-2.47</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.7</span><span class="number">.300045773</span> = STRING: <span class="string">"Ethernet1/27 Lane 1 Transceiver Receive Power Sensor"</span>                &lt;&lt;&lt;        <span class="number">300045773</span> represent Rx Power</span><br><span class="line">SNMPv2-SMI::mib<span class="number">-2.47</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.7</span><span class="number">.300045774</span> = STRING: <span class="string">"Ethernet1/27 Lane 1 Transceiver Transmit Power Sensor"</span>                &lt;&lt;&lt;        <span class="number">300045774</span> represent Tx Power</span><br></pre></td></tr></table></figure>

<p>Step2: get the rx/tx power of transceiver</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ ./snmpwalk.exe -v <span class="number">2</span>c -c cisco -t <span class="number">20</span> <span class="number">10.75</span><span class="number">.61</span><span class="number">.21</span> <span class="number">1.3</span><span class="number">.6</span><span class="number">.1</span><span class="number">.4</span><span class="number">.1</span><span class="number">.9</span><span class="number">.9</span><span class="number">.91</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.4</span></span><br><span class="line"> </span><br><span class="line">SNMPv2-SMI::enterprises<span class="number">.9</span><span class="number">.9</span><span class="number">.91</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.4</span><span class="number">.300045773</span> = INTEGER: <span class="number">-3746</span></span><br><span class="line">SNMPv2-SMI::enterprises<span class="number">.9</span><span class="number">.9</span><span class="number">.91</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.1</span><span class="number">.4</span><span class="number">.300045774</span> = INTEGER: <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>Step3: Verify</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N93180EX<span class="number">-2</span>(config)<span class="comment"># show interface e1/27 transceiver details</span></span><br><span class="line">Ethernet1/<span class="number">27</span></span><br><span class="line">    transceiver <span class="keyword">is</span> present</span><br><span class="line">    type <span class="keyword">is</span> <span class="number">10</span>Gbase-SR-S</span><br><span class="line">    name <span class="keyword">is</span> CISCO-OPLINK</span><br><span class="line">    part number <span class="keyword">is</span> TPP4XGDS0CCISE3G</span><br><span class="line">    revision <span class="keyword">is</span> <span class="number">01</span></span><br><span class="line">    serial number <span class="keyword">is</span> OPM22280QN1</span><br><span class="line">    nominal bitrate <span class="keyword">is</span> <span class="number">10300</span> MBit/sec</span><br><span class="line">    Link length supported <span class="keyword">for</span> <span class="number">50</span>/<span class="number">125</span>um OM2 fiber <span class="keyword">is</span> <span class="number">82</span> m</span><br><span class="line">    Link length supported <span class="keyword">for</span> <span class="number">62.5</span>/<span class="number">125</span>um fiber <span class="keyword">is</span> <span class="number">26</span> m</span><br><span class="line">    Link length supported <span class="keyword">for</span> <span class="number">50</span>/<span class="number">125</span>um OM3 fiber <span class="keyword">is</span> <span class="number">300</span> m</span><br><span class="line">    cisco id <span class="keyword">is</span> <span class="number">3</span></span><br><span class="line">    cisco extended id number <span class="keyword">is</span> <span class="number">4</span></span><br><span class="line">    cisco part number <span class="keyword">is</span> <span class="number">10</span><span class="number">-3105</span><span class="number">-01</span></span><br><span class="line">    cisco product id <span class="keyword">is</span> SFP<span class="number">-10</span>G-SR-S</span><br><span class="line"> </span><br><span class="line">           SFP Detail Diagnostics Information (internal calibration)</span><br><span class="line">  ----------------------------------------------------------------------------</span><br><span class="line">                Current              Alarms                  Warnings</span><br><span class="line">                Measurement     High        Low         High          Low</span><br><span class="line">  ----------------------------------------------------------------------------</span><br><span class="line">  Temperature   <span class="number">28.87</span> C        <span class="number">75.00</span> C     <span class="number">-5.00</span> C     <span class="number">70.00</span> C        <span class="number">0.00</span> C</span><br><span class="line">  Voltage        <span class="number">3.28</span> V         <span class="number">3.63</span> V      <span class="number">2.97</span> V      <span class="number">3.46</span> V        <span class="number">3.13</span> V</span><br><span class="line">  Current           N/A        <span class="number">12.00</span> mA     <span class="number">0.50</span> mA    <span class="number">11.50</span> mA       <span class="number">1.00</span> mA</span><br><span class="line">  Tx Power          N/A         <span class="number">1.99</span> dBm  <span class="number">-11.30</span> dBm   <span class="number">-1.00</span> dBm     <span class="number">-7.30</span> dBm</span><br><span class="line">  Rx Power      <span class="number">-3.74</span> dBm       <span class="number">1.99</span> dBm  <span class="number">-13.97</span> dBm   <span class="number">-1.00</span> dBm     <span class="number">-9.91</span> dBm</span><br><span class="line">  Transmit Fault Count = <span class="number">0</span></span><br><span class="line">  ----------------------------------------------------------------------------</span><br><span class="line">  Note: ++  high-alarm; +  high-warning; --  low-alarm; -  low-warning</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
