<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/08/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>bgp flapping every 3 mins</title>
    <url>/2020/05/09/bgp-flapping-every-3-mins/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="http://qa2m8sna1.bkt.clouddn.com/bgp-1-1.png" alt="bgp1-1 topo"></p>
<p>1/ N9K-1与N9K-2直连，物理口L2，两端用loopback0(11.11/32与22.22/32)建IBGP邻居，两端loopback互相访问的出口是SVI10与e1/1</p>
<p>2/ 两端SVI10 MTU 9216, 两端e1/1 MTU 1500</p>
<p>3/ bgp每隔3分钟flap一次，log显示down的原因是holdtimer expire</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">31</span>:<span class="number">02</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Down - sent:  holdtimer expired error</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">31</span>:<span class="number">13</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Up </span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">34</span>:<span class="number">13</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Down - sent:  holdtimer expired error</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">34</span>:<span class="number">24</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Up </span><br><span class="line"><span class="number">2020</span> Apr <span class="number">20</span> <span class="number">18</span>:<span class="number">37</span>:<span class="number">24</span> switch %BGP<span class="number">-5</span>-ADJCHANGE:  bgp- [<span class="number">23416</span>] (default) neighbor <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span> Down - sent:  holdtimer expired error</span><br></pre></td></tr></table></figure>

<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>在N9K-1上ethanalyzer抓包如下</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">93180</span><span class="number">-1</span>(config-<span class="keyword">if</span>)<span class="comment"># ethanalyzer local interface inband display-filter "ip.addr==11.11.11.11" limit-captured-frames 0</span></span><br><span class="line"></span><br><span class="line">Capturing on inband</span><br><span class="line">2020-04-21 14:37:46.113886  22.22.22.22 -&gt; 11.11.11.11  BGP NOTIFICATION Message</span><br><span class="line">2020-04-21 14:37:46.113932  11.11.11.11 -&gt; 22.22.22.22  TCP 27237 &gt; bgp [ACK] Seq=2646 Ack=22 Win=4588 Len=0 TSV=6362322 TSER=6515652</span><br><span class="line">2020-04-21 14:37:51.120379  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 27237 [FIN, ACK] Seq=22 Ack=1 Win=4582 Len=0 TSV=6517154 TSER=6308321</span><br><span class="line">2020-04-21 14:37:51.121086  11.11.11.11 -&gt; 22.22.22.22  BGP KEEPALIVE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:51.121201  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 27237 [RST] Seq=23 Win=0 Len=0</span><br><span class="line">2020-04-21 14:37:57.001783  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [SYN] Seq=0 Win=18352 Len=0 MSS=9176 TSV=6365589 TSER=0 WS=2</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  TCP三次握手协商出MSS <span class="number">9176</span></span><br><span class="line"></span><br><span class="line">2020-04-21 14:37:57.001910  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [SYN, ACK] Seq=0 Ack=1 Win=18328 Len=0 MSS=9176 TSV=6518918 TSER=6365589 WS=2</span><br><span class="line">2020-04-21 14:37:57.001968  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=1 Ack=1 Win=18352 Len=0 TSV=6365589 TSER=6518918</span><br><span class="line">2020-04-21 14:37:57.002650  22.22.22.22 -&gt; 11.11.11.11  BGP OPEN Message</span><br><span class="line">2020-04-21 14:37:57.002687  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=1 Ack=71 Win=18352 Len=0 TSV=6365589 TSER=6518918</span><br><span class="line">2020-04-21 14:37:57.137256  11.11.11.11 -&gt; 22.22.22.22  BGP OPEN Message</span><br><span class="line">2020-04-21 14:37:57.137362  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [ACK] Seq=71 Ack=71 Win=18328 Len=0 TSV=6518959 TSER=6365629</span><br><span class="line">2020-04-21 14:37:57.138112  11.11.11.11 -&gt; 22.22.22.22  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:57.138180  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [ACK] Seq=71 Ack=90 Win=18328 Len=0 TSV=6518959 TSER=6365630</span><br><span class="line">2020-04-21 14:37:57.150782  22.22.22.22 -&gt; 11.11.11.11  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:57.150812  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=90 Ack=90 Win=18352 Len=0 TSV=6365634 TSER=6518963</span><br><span class="line">2020-04-21 14:37:58.152430  11.11.11.11 -&gt; 22.22.22.22  BGP UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  向外发大于<span class="number">1500</span>B的update                               </span><br><span class="line"></span><br><span class="line">2020-04-21 14:37:58.157457  22.22.22.22 -&gt; 11.11.11.11  BGP UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:58.157505  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=198 Win=18352 Len=0 TSV=6365936 TSER=6519265</span><br><span class="line">2020-04-21 14:37:58.354040  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message   </span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  大于<span class="number">1500</span>B的update大于对端物理口MTU，被视为jumbo直接丢弃，对面不回ACK，本端收不到ACK，不断重传</span><br><span class="line"></span><br><span class="line">2020-04-21 14:37:58.760702  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:37:59.574032  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:01.204036  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:04.464031  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:10.984024  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:24.024033  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:50.104020  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:58.163131  22.22.22.22 -&gt; 11.11.11.11  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:38:58.163193  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=217 Win=18352 Len=0 TSV=6383937 TSER=6537267</span><br><span class="line">2020-04-21 14:39:42.317356  11.11.11.11 -&gt; 22.22.22.22  BGP [TCP Retransmission] UPDATE Message, UPDATE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:39:58.169396  22.22.22.22 -&gt; 11.11.11.11  BGP KEEPALIVE Message</span><br><span class="line">2020-04-21 14:39:58.169458  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=236 Win=18352 Len=0 TSV=6401939 TSER=6555269</span><br><span class="line">2020-04-21 14:40:57.155907  22.22.22.22 -&gt; 11.11.11.11  BGP NOTIFICATION Message                                                                                                                                                                                  </span><br><span class="line">2020-04-21 14:40:57.155955  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2735 Ack=257 Win=18352 Len=0 TSV=6419635 TSER=6572965</span><br><span class="line">2020-04-21 14:41:02.161130  11.11.11.11 -&gt; 22.22.22.22  BGP KEEPALIVE Message, KEEPALIVE Message</span><br><span class="line">2020-04-21 14:41:02.161252  22.22.22.22 -&gt; 11.11.11.11  TCP [TCP Dup ACK 5137#1] bgp &gt; 31606 [ACK] Seq=257 Ack=90 Win=18328 Len=0 TSV=6574466 TSER=6365634 SLE=2735 SRE=2774</span><br><span class="line">2020-04-21 14:41:02.162420  22.22.22.22 -&gt; 11.11.11.11  TCP bgp &gt; 31606 [FIN, ACK] Seq=257 Ack=90 Win=18328 Len=0 TSV=6574467 TSER=6365634 SLE=2735 SRE=2774</span><br><span class="line">2020-04-21 14:41:02.162451  11.11.11.11 -&gt; 22.22.22.22  TCP 31606 &gt; bgp [ACK] Seq=2774 Ack=258 Win=18352 Len=0 TSV=6421137 TSER=6574467</span><br></pre></td></tr></table></figure>

<p>要点</p>
<p>1/ 在BGP邻居建立前的进行TCP三次握手中，可以看到MSS协商成了9176</p>
<p>2/ BGP建邻居用的Open报文都是小包(size &lt; 1500)正常收发，bgp邻居正常建立</p>
<p>3/ bgp邻居建立后，下一步是通告bgp update，bgp Update报文size上限由TCP MSS决定，所以此处BGP Update size最大可以达到9176，<br>bgp通告路由时会将多个NLRI路由信息裹在一个Update报文里，所以当邻居up后，需要通告的路由较多时，很容易出现Update size &gt; 1500 的情况出现，bgp Update size &gt; 物理口e1/1的MTU 1500，所以N9K-1将该包记output error &amp; jumbo将包从e1/1发出，N9K-2收到包记input error &amp; jumbo，并在接口层面丢弃该报文，所以上层tcp &amp; bgp实际上并没有收到这个tcp based update，自然也不会回复ack，所以我们看到N9K-1由于收不到ack，不断重传</p>
<p>4/ 仔细观察Update报文部分，会发现keepalive报文也是裹在jumbo frame的bgp update作为同一个传输的，所以keepalive也是被N9K-2直接丢弃的并且没有ack，所以N9K-1在连续三次发出的Keepalive(60s * 3 == 180s/3mins)没有被ack后，触发holdtime expire，邻居被重置，然后一直循环这4个步骤</p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>1/沿途涉及的L2/L3接口MTU统一成9216</p>
<p>2/两端配置pmtud，启用后pmtud协商出较小的MSS值，如下输出协商成了1024，所以后续bgp update不会大于这个size</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">93180</span><span class="number">-1</span>(config-<span class="keyword">if</span>)<span class="comment">#  show sockets connection local 11.11.11.11 foreign 22.22.22.22 detail </span></span><br><span class="line"></span><br><span class="line">Total number of netstack tcp sockets: <span class="number">5</span></span><br><span class="line">Active connections (including servers)</span><br><span class="line"></span><br><span class="line">Total number of netstack udp sockets: <span class="number">9</span></span><br><span class="line">Active connections (including servers)</span><br><span class="line"></span><br><span class="line">Total number of netstack raw sockets: <span class="number">0</span></span><br><span class="line"></span><br><span class="line">Kernel Socket Connection:</span><br><span class="line">State      Recv-Q Send-Q        Local Address:Port          Peer Address:Port </span><br><span class="line"></span><br><span class="line">ESTAB      <span class="number">0</span>      <span class="number">0</span>               <span class="number">11.11</span><span class="number">.11</span><span class="number">.11</span>:<span class="number">179</span>            <span class="number">22.22</span><span class="number">.22</span><span class="number">.22</span>:<span class="number">54435</span>  ino:<span class="number">133796</span> sk:ffff8805d0e31a00</span><br><span class="line"></span><br><span class="line">         skmem:(r0,rb262144,t0,tb262144,f0,w0,o0) ts sack cubic wscale:<span class="number">2</span>,<span class="number">2</span> rto:<span class="number">203.333</span> rtt:<span class="number">3.333</span>/<span class="number">1.666</span> ato:<span class="number">40</span> mss:<span class="number">1024</span> cwnd:<span class="number">5</span> ssthresh:<span class="number">7</span> send <span class="number">12.3</span>Mbps rcv_space:<span class="number">18328</span></span><br></pre></td></tr></table></figure>

<h3 id="附LAB复现方法"><a href="#附LAB复现方法" class="headerlink" title="附LAB复现方法"></a>附LAB复现方法</h3><p>LAB找两台N9K用如上拓扑连接，然后在N9K-1上通过脚本创建大量loopback，并将其network到bgp中，通告给N9K-2。复现这个故障最关键地方是需要保证bgp up后，向peer通告的路由数量要足够多，Update size需要大于1500</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> cli <span class="keyword">import</span> *</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">509</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">if</span> i &lt;= <span class="number">254</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">print</span> <span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.1.'</span> + str(i) + <span class="string">'/32'</span></span><br><span class="line"><span class="meta">... </span>        cli(<span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.1.'</span> + str(i) + <span class="string">'/32'</span>)</span><br><span class="line"><span class="meta">... </span>    <span class="keyword">else</span>:</span><br><span class="line"><span class="meta">... </span>        <span class="keyword">print</span> <span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.2.'</span> + str(i<span class="number">-254</span>) + <span class="string">'/32'</span></span><br><span class="line"><span class="meta">... </span>        cli(<span class="string">'conf t ; interface loopback'</span> + str(i) + <span class="string">' ; ip address 1.1.2.'</span> + str(i<span class="number">-254</span>) + <span class="string">'/32'</span>)</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">conf t ; interface loopback0 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback1 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.1</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback2 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.2</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback3 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.3</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback4 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.4</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback5 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.5</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback6 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.6</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback7 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.7</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback8 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.8</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line">conf t ; interface loopback9 ; ip address <span class="number">1.1</span><span class="number">.1</span><span class="number">.9</span>/<span class="number">32</span></span><br><span class="line"><span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>quit()</span><br><span class="line"> Redistribute the <span class="number">500</span> loopbacks into BGP to create a large size BGP UPDATE</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">ip prefix-list LOCAL-TO-BGP seq <span class="number">5</span> permit <span class="number">1.1</span><span class="number">.1</span><span class="number">.0</span>/<span class="number">24</span> ge <span class="number">25</span> </span><br><span class="line">ip prefix-list LOCAL-TO-BGP seq <span class="number">10</span> permit <span class="number">1.1</span><span class="number">.2</span><span class="number">.0</span>/<span class="number">24</span> ge <span class="number">25</span></span><br><span class="line">!</span><br><span class="line">route-map LOCAL-TO-BGP permit <span class="number">10</span></span><br><span class="line">  match ip address prefix-list LOCAL-TO-BGP </span><br><span class="line">!</span><br><span class="line">router bgp <span class="number">64512</span></span><br><span class="line">  timers bgp <span class="number">3</span> <span class="number">9</span></span><br><span class="line">  address-family ipv4 unicast</span><br><span class="line">    redistribute direct route-map LOCAL-TO-BGP</span><br></pre></td></tr></table></figure>




]]></content>
      <tags>
        <tag>bgp</tag>
      </tags>
  </entry>
  <entry>
    <title>N9K I77下client无法通过dhcp获取地址</title>
    <url>/2020/05/10/unable-to-get-address-from-dhcp-on-I77/</url>
    <content><![CDATA[<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="http://qa2m8sna1.bkt.clouddn.com/dhcp1-1.png" alt="bgp1-1 topo"></p>
<p>1/ dhcp server与dhcp client直连N9K 7.0(3)I7(7)，并且同属VLAN103网段</p>
<p>2/ N9K通过连接client与server的端口的关键配置是LACP &amp; no lacp suspend-individual &amp; trunk native 103</p>
<p>3/ 客户反馈当有port-channel时，client无法从dhcp server获取地址，而当接口摘除port-channel配置后，就可以拿到地址</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>1/ 客户告知client网卡发包不会带上VLAN_TAG，所以N9K收到client的流量应该识别成native vlan 103<br>另外client在拿到地址前，client网卡是不会关联到LACP的，拿到地址后client网卡会自动关联到LACP mode，所以初始状态下客户需要在N9K上连接client的端口使用命令no lacp suspend-individual来避免N9K因收不到client过来的LACPDU而suspend物理口的情况，所以在该命令作用下，e1/2的初始状态是individual</p>
<p>2/ 由于是测试环境几乎没有流量，所以在故障状态下，用SPAN_TO_SPU的方式抓e1/2 rx的包，N9K可以抓到client发来的dhcp discover</p>
<p>3/ 在故障状态下，用SPAN_TO_CPU的方式抓e1/1 tx的包，N9K抓不到client发来的dhcp discover</p>
<p>4/ 通过2和3，确定丢包点是N9K，下一步就是做elam看丢包原因了，从elam结果中我们可以看到e1/2收到的discover包后，错误地识别成VLAN1，所以自然无法转发到同subnet VLAN103的dhcp server</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">SZYF-A1<span class="number">-201</span>-A06-T1<span class="number">-01</span><span class="number">-04</span><span class="number">-231.4</span>(TAH-elam-insel6)<span class="comment"># set outer l2 src_mac bbbb.bbbb.bbbb dst_mac ffff.ffff.ffff </span></span><br><span class="line">SZYF-A1<span class="number">-201</span>-A06-T1<span class="number">-01</span><span class="number">-04</span><span class="number">-231.4</span>(TAH-elam-insel6)<span class="comment"># start</span></span><br><span class="line">SZYF-A1<span class="number">-201</span>-A06-T1<span class="number">-01</span><span class="number">-04</span><span class="number">-231.4</span>(TAH-elam-insel6)<span class="comment"># report</span></span><br><span class="line">Initting block addresses</span><br><span class="line"></span><br><span class="line">SUGARBOWL ELAM REPORT SUMMARY</span><br><span class="line">slot - <span class="number">1</span>, asic - <span class="number">0</span>, slice - <span class="number">0</span></span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">Incoming Interface: Eth1/<span class="number">2</span>					&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; dhcp包从e1/<span class="number">2</span>进来</span><br><span class="line">Src Idx : <span class="number">0x5</span>, Src BD : <span class="number">1</span>					&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Src BD表示流量收到别识别成的VLAN_ID，此处有误，应该是VLAN103才对</span><br><span class="line">Outgoing Interface Info: met_ptr <span class="number">0</span></span><br><span class="line"></span><br><span class="line">Packet Type: IPv4</span><br><span class="line"></span><br><span class="line">Dst MAC address: FF:FF:FF:FF:FF:FF</span><br><span class="line">Src MAC address: B8:BB:BB:BB:BB:BB</span><br><span class="line"></span><br><span class="line">Dst IPv4 address: <span class="number">255.255</span><span class="number">.255</span><span class="number">.255</span></span><br><span class="line">Src IPv4 address: <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">Ver     =  <span class="number">4</span>, DSCP    =    <span class="number">4</span>, Don<span class="string">'t Fragment = 0</span></span><br><span class="line"><span class="string">Proto   = 17, TTL     =  128, More Fragments = 0</span></span><br><span class="line"><span class="string">Hdr len = 20, Pkt len =  328, Checksum       = 0x3996</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">L4 Protocol  : 17</span></span><br><span class="line"><span class="string">UDP Dst Port : 67</span></span><br><span class="line"><span class="string">UDP Src Port : 68</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Drop Info:									&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Drop Info要是不为空，通常表示这个包丢了，并且会记录drop reason</span></span><br><span class="line"><span class="string">----------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">LUA:</span></span><br><span class="line"><span class="string">LUB:</span></span><br><span class="line"><span class="string">LUC:</span></span><br><span class="line"><span class="string">LUD:</span></span><br><span class="line"><span class="string">  OUTER_IDS_G0</span></span><br><span class="line"><span class="string">Final Drops:</span></span><br><span class="line"><span class="string">ELAM not triggered yet on slot - 1, asic - 0, slice - 1</span></span><br></pre></td></tr></table></figure>

<p>5/ 用下面的命令发现l2一致性校验不通过，并且指示native vlan软硬件编程不同步，这也和上述elam结果一致</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N9K<span class="comment"># sh consistency-checker l2 switchport interface ethernet 1/2</span></span><br><span class="line">Checking <span class="keyword">for</span> interface: Ethernet1/<span class="number">2</span></span><br><span class="line">SW <span class="keyword">and</span> HW trunk native VLAN <span class="keyword">not</span> same</span><br><span class="line">SW Trunk Native VLAN: <span class="number">103</span></span><br><span class="line">HW Trunk Native VLAN<span class="string">" 1</span></span><br><span class="line"><span class="string">Seoul2# 2020 Jan  8 13:22:56 Seoul2 %$ VDC-1 %$ vshd: CC_SWITCHPORT: Consistency Check: FAILED		&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span></span><br></pre></td></tr></table></figure>

<p>6/ 最后，这个问题是中了bug CSCvr81063 - Native VLAN hardware mis-programming happens in tah after upgrade to 7.0.3.I7.7 with LACP individual</p>
<p>触发条件就是N9K I77 &amp; N9K lacp suspend-individual &amp; client NIC non-lacp</p>
<p>bug链接：<br><a href="https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvr81063" target="_blank" rel="noopener">https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvr81063</a></p>
<p>bug smu链接：<br><a href="https://software.cisco.com/download/home/286312403/type/286278856/release/7.0(3)I7(7)?catid=268438038" target="_blank" rel="noopener">https://software.cisco.com/download/home/286312403/type/286278856/release/7.0(3)I7(7)?catid=268438038</a></p>
<h3 id="不改动现有配置的解决方法"><a href="#不改动现有配置的解决方法" class="headerlink" title="不改动现有配置的解决方法"></a>不改动现有配置的解决方法</h3><p>由于是中了BUG，并且该bug有SMU可打，所以解决方法自然是要么打SMU补丁，要么升级到bug修复版本</p>
<p>打SMU步骤可以参考如下</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span>/ install add bootflash:nxos.CSCvr81063-n9k_ALL<span class="number">-1.0</span><span class="number">.0</span><span class="number">-7.0</span><span class="number">.3</span>.I7<span class="number">.7</span>.lib32_n9000.rpm</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>/ install activate nxos.CSCvr81063-n9k_ALL<span class="number">-1.0</span><span class="number">.0</span><span class="number">-7.0</span><span class="number">.3</span>.I7<span class="number">.7</span>.lib32_n9000.rpm</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>/ install commit nxos.CSCvr81063-n9k_ALL<span class="number">-1.0</span><span class="number">.0</span><span class="number">-7.0</span><span class="number">.3</span>.I7<span class="number">.7</span>.lib32_n9000.rpm</span><br></pre></td></tr></table></figure>

<p>最后客户反馈打上SMU后，一致性校验通过，故障解决，完结撒花。</p>
]]></content>
      <tags>
        <tag>dhcp</tag>
      </tags>
  </entry>
  <entry>
    <title>3548 hsrp双活，直连ping不通</title>
    <url>/2020/05/10/hsrp-dual-active/</url>
    <content><![CDATA[<ul>
<li>涉及的主机名/IP/MAC/端口编号已改</li>
</ul>
<h3 id="故障描述"><a href="#故障描述" class="headerlink" title="故障描述"></a>故障描述</h3><p>拓扑</p>
<p><img src="http://qa2m8sna1.bkt.clouddn.com/arp1-1.png" alt="arp1-1 topo"></p>
<p>1/ N3548软件版本7.0(3)I7(6)</p>
<p>2/ SVI101这个hsrp instance双活dual active</p>
<p>3/ 客户反馈两边SVI101互ping不通，互联的物理口配置是trunk &amp; allow all vlan</p>
<h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>先从SVI互ping不通的问题切入排查</p>
<p>1/ ping不通显示Destination Host Unreachable，说明3548-1解析不到3548-2 SVI101的</p>
<p>N3548-1# ping 10.1.1.3<br>PING 10.1.213.3 (10.1.1.3): 56 data bytes<br>36 bytes from 10.1.1.3: Destination Host Unreachable<br>Request 0 timed out<br>36 bytes from 10.1.1.3: Destination Host Unreachable<br>^C<br>— 10.1.1.3 ping statistics —<br>2 packets transmitted, 0 packets received, 100.00% packet loss</p>
<p>TGL-SW-N3548-JS-1# sh ip arp | i 10.1.213.3<br>10.1.213.3      00:00:08  INCOMPLETE      Vlan101    &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; INCOMPLETE</p>
<p>2/ ping的时候在3548-1和3548-2上同时ethanalyzer arp，3548-1说自己发了arp request，3548-2却说自己没收到arp request</p>
<p>N3548-1# ethanalyzer local interface inband display-filter arp limit-captured-frames 0</p>
<p>Capturing on inband<br>wireshark-cisco-mtc-dissector: ethertype=0xde09, devicetype=0x0</p>
<p>2020-04-28 09:55:54.350286 7c:21:0e:2c:75:fc -&gt; ff:ff:ff:ff:ff:ff ARP Who has 10.1.213.3?  Tell 10.1.213.2<br>2020-04-28 09:55:58.356976 7c:21:0e:2c:75:fc -&gt; ff:ff:ff:ff:ff:ff ARP Who has 10.1.213.3?  Tell 10.1.213.2</p>
<p>3/ 在3548-2上清copp计数，随后在发起N35-1发起ping的时候，观察copp counter，发现只要N35-1 ping了几个包，N35-2 copp arp queue就显示丢几个包</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">N3548<span class="number">-1</span>共ping了<span class="number">3</span>个包后</span><br><span class="line"></span><br><span class="line">TGL-SW-N3548-JS<span class="number">-2</span><span class="comment"># show policy-map interface control-plane | i arp next 5</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">arp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 200 </span></span><br><span class="line"><span class="class">        <span class="title">HW</span> <span class="title">Matched</span> <span class="title">Packets</span>    9</span></span><br><span class="line"><span class="class">        <span class="title">SW</span> <span class="title">Matched</span> <span class="title">Packets</span>    6			&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; <span class="title">HW</span>表示硬件接口实际收到了多少包，<span class="title">SW</span>表示实际多少包上到上层<span class="title">arp</span>进程去处理，如果二者相等表示<span class="title">COPP</span>无丢包，如果二者不等，说明包被<span class="title">COPP</span>丢了，这里表明丢了3个包，正好和我们丢的3个<span class="title">ping</span>包能对上</span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">ptp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 1000 </span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">N3548</span>-1共<span class="title">ping</span>了4个包后</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">TGL</span>-<span class="title">SW</span>-<span class="title">N3548</span>-<span class="title">JS</span>-2# <span class="title">show</span> <span class="title">policy</span>-<span class="title">map</span> <span class="title">interface</span> <span class="title">control</span>-<span class="title">plane</span> | <span class="title">i</span> <span class="title">arp</span> <span class="title">next</span> 5</span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">arp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 200 </span></span><br><span class="line"><span class="class">        <span class="title">HW</span> <span class="title">Matched</span> <span class="title">Packets</span>    10</span></span><br><span class="line"><span class="class">        <span class="title">SW</span> <span class="title">Matched</span> <span class="title">Packets</span>    6			&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; 这里表面丢了4个包，正好和我们丢的4个<span class="title">ping</span>包能对上</span></span><br><span class="line"><span class="class">    <span class="title">class</span>-<span class="title">map</span> <span class="title">copp</span>-<span class="title">s</span>-<span class="title">ptp</span> <span class="params">(match-any)</span></span></span><br><span class="line"><span class="class">      <span class="title">police</span> <span class="title">pps</span> 1000</span></span><br></pre></td></tr></table></figure>

<p>4/ 通过上一步明显看出包都丢在copp上了，但诡异的地方也在这里，上述输出可以看到copp为arp设置的阈值是200pps，理论上说N3548-2 CPU收到的arp速率得在200pps以上才会触发copp丢包才对，所以此处是个疑点，先mark</p>
<p>5/ 继续查看3548-2的syslog，发现过去两周内有一些接口flapping的log，这种flap有可能是trigger，但客户反馈不清楚故障发生的准确时间，所以也先mark</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">We can see e1/<span class="number">27</span>(unused port) staus change two week ago</span><br><span class="line"></span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">46</span> N3548<span class="number">-1</span> %ETHPORT<span class="number">-5</span>-IF_HARDWARE: Interface Ethernet1/<span class="number">27</span>, hardware type changed to <span class="number">1</span>G</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">55</span> N3548<span class="number">-1</span> %ETHPORT<span class="number">-5</span>-IF_HARDWARE: Interface Ethernet1/<span class="number">27</span>, hardware type changed to No-Transceiver</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">38</span>:<span class="number">56</span> N3548<span class="number">-1</span> %ETHPORT<span class="number">-5</span>-IF_DOWN_NONE: Interface Ethernet1/<span class="number">27</span> <span class="keyword">is</span> down (<span class="literal">None</span>)</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">09</span>:<span class="number">40</span>:<span class="number">25</span> N3548<span class="number">-1</span> %VSHD<span class="number">-5</span>-VSHD_SYSLOG_CONFIG_I: Configured <span class="keyword">from</span> vty by admin on console0</span><br><span class="line"><span class="number">2020</span> Apr <span class="number">14</span> <span class="number">10</span>:<span class="number">14</span>:<span class="number">51</span> N3548<span class="number">-1</span> last message repeated <span class="number">1</span> time</span><br></pre></td></tr></table></figure>

<p>6/ 最后结合这些现象，hsrp双活以及arp无法解析的问题命中bug CSCvs97553 ARP/HSRP Cannot be punt to CPU after some link state change</p>
<p>bug症状与触发条件如下<br>In warp/normal mode, if the interface has some changes such as shutdown or unplugging the optical module,the remaining Layer 2 interfaces will fail to send ARP/HSRP packets to the CPU, whether unicast ARP or broadcast ARP.</p>
<p>Only 7.3(3)I7(6) and later will hit this issue</p>
<p>bug链接<br><a href="https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvs97553" target="_blank" rel="noopener">https://bst.cloudapps.cisco.com/bugsearch/bug/CSCvs97553</a></p>
<h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>3548升级到修复版本I7(8)或者9.3(4)规避该bug</p>
<p>最后，客户反馈升级到I78后，故障解决，完结撒花。</p>
]]></content>
      <tags>
        <tag>arp</tag>
      </tags>
  </entry>
</search>
